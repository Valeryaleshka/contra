[{"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\index.js":"1","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\index.js":"2","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Enemy.js":"3","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Physics.js":"4","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Scene.js":"5","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Controls\\index.js":"6","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Controls\\keydown.js":"7","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Controls\\click.js":"8","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Controls\\keyup.js":"9","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Bullets.js":"10","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Controls.js":"11","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\matter\\index.js":"12","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\matter\\collisions.js":"13","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\Factory.js":"14","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\1lvl\\level1.js":"15","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\1lvl\\nature\\nature.js":"16","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Elements\\Element.js":"17","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Effects\\Bang\\Bang.js":"18","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Effects\\Effect.js":"19","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\1lvl\\farm\\farm.js":"20","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Effects.js":"21","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\menu\\Menu.js":"22","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\matter\\beforeUpdate.js":"23","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\lib\\getFromEnitites.js":"24","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\lib\\defineUnit.js":"25","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\menu\\Controls\\MenuControls.js":"26","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Effects\\Effect.creator.js":"27","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\menu\\Settings\\MenuSettings.js":"28","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\menu\\Dead\\DeadMenu.js":"29","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Effects\\BulletHit\\BulletHit.js":"30","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Elements\\Background.js":"31","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Elements\\Static.js":"32","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Elements\\Water.js":"33","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\lib\\degToRad.js":"34","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Effects\\Effect.renderer.js":"35","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Elements\\Element.renderer.js":"36","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Player.js":"37","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Golem\\Golem.js":"38","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Bird\\Bird.js":"39","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Boss1\\Boss1.js":"40","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Unit.js":"41","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Enemy.js":"42","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Golem\\Golem.animations.js":"43","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Boss1\\Boss1.animations.js":"44","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Bird\\Bird.animations.js":"45","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\constraints\\colides.js":"46","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\index.js":"47","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Unit.renderer.js":"48","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Unit.animation.js":"49","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\quad.js":"50","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\strike.js":"51","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\stand_up.js":"52","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\sit.js":"53","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\run.js":"54","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\run_and_fire.js":"55","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\jump_and_strike.js":"56","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\jump_and_fire.js":"57","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\jump.js":"58","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\jump_and_alt_fire.js":"59","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\idle.js":"60","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\idle_fire.js":"61","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Adds\\healthbar.js":"62","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\force_run.js":"63","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Adds\\Indicator\\indicator.js":"64","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\force_run_and_fire.js":"65","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\force_jump.js":"66","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\appear.js":"67","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\fall.js":"68","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Player.bullet.js":"69","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Golem\\Golem.bullet.js":"70","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\lib\\distanceProps.js":"71","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Boss1\\Boss1.renderer.js":"72","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Bullet\\Bullet.js":"73","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Bullet\\Bullet.renderer.js":"74","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\2lvl\\level2.js":"75","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\2lvl\\farm\\farm.js":"76","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\2lvl\\nature\\nature.js":"77","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\reportWebVitals.js":"78","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Boss1\\Boss1.bullet.js":"79","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\lib\\getRandomFromArray.js":"80","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\GolemBig\\GolemBig.js":"81","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Bat\\Bat.js":"82","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Spider\\Spider.js":"83","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Spider\\Spider.animations.js":"84","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Bat\\Bat.animations.js":"85","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\GolemBig\\GolemBig.bullet.js":"86","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\GolemBig\\GolemBig.animations.js":"87"},{"size":636,"mtime":1612089842475,"results":"88","hashOfConfig":"89"},{"size":2510,"mtime":1612206240790,"results":"90","hashOfConfig":"89"},{"size":346,"mtime":1611925960639,"results":"91","hashOfConfig":"89"},{"size":3303,"mtime":1611824897759,"results":"92","hashOfConfig":"89"},{"size":3604,"mtime":1612206240794,"results":"93","hashOfConfig":"89"},{"size":132,"mtime":1610307345118,"results":"94","hashOfConfig":"89"},{"size":275,"mtime":1610717795770,"results":"95","hashOfConfig":"89"},{"size":213,"mtime":1610307345117,"results":"96","hashOfConfig":"89"},{"size":245,"mtime":1610717795770,"results":"97","hashOfConfig":"89"},{"size":449,"mtime":1611925960638,"results":"98","hashOfConfig":"89"},{"size":811,"mtime":1611226021954,"results":"99","hashOfConfig":"89"},{"size":661,"mtime":1611226021992,"results":"100","hashOfConfig":"89"},{"size":5986,"mtime":1612089842472,"results":"101","hashOfConfig":"89"},{"size":5872,"mtime":1612206240789,"results":"102","hashOfConfig":"89"},{"size":26274,"mtime":1612089842467,"results":"103","hashOfConfig":"89"},{"size":6180,"mtime":1612089842468,"results":"104","hashOfConfig":"89"},{"size":610,"mtime":1611925960566,"results":"105","hashOfConfig":"89"},{"size":886,"mtime":1612089842422,"results":"106","hashOfConfig":"89"},{"size":1565,"mtime":1611925960565,"results":"107","hashOfConfig":"89"},{"size":2716,"mtime":1611330563380,"results":"108","hashOfConfig":"89"},{"size":286,"mtime":1611226021994,"results":"109","hashOfConfig":"89"},{"size":6629,"mtime":1612206240791,"results":"110","hashOfConfig":"89"},{"size":508,"mtime":1611330563390,"results":"111","hashOfConfig":"89"},{"size":142,"mtime":1611226021989,"results":"112","hashOfConfig":"89"},{"size":187,"mtime":1611226021988,"results":"113","hashOfConfig":"89"},{"size":500,"mtime":1611330563390,"results":"114","hashOfConfig":"89"},{"size":303,"mtime":1611226021960,"results":"115","hashOfConfig":"89"},{"size":439,"mtime":1611330563394,"results":"116","hashOfConfig":"89"},{"size":526,"mtime":1611330563391,"results":"117","hashOfConfig":"89"},{"size":762,"mtime":1611226021956,"results":"118","hashOfConfig":"89"},{"size":709,"mtime":1611330563368,"results":"119","hashOfConfig":"89"},{"size":1009,"mtime":1612089842426,"results":"120","hashOfConfig":"89"},{"size":517,"mtime":1611824897707,"results":"121","hashOfConfig":"89"},{"size":131,"mtime":1611226021988,"results":"122","hashOfConfig":"89"},{"size":505,"mtime":1612086610662,"results":"123","hashOfConfig":"89"},{"size":866,"mtime":1612086610663,"results":"124","hashOfConfig":"89"},{"size":4105,"mtime":1612206240787,"results":"125","hashOfConfig":"89"},{"size":2517,"mtime":1612089842464,"results":"126","hashOfConfig":"89"},{"size":1103,"mtime":1611925960571,"results":"127","hashOfConfig":"89"},{"size":5185,"mtime":1612206240786,"results":"128","hashOfConfig":"89"},{"size":4525,"mtime":1612203995728,"results":"129","hashOfConfig":"89"},{"size":911,"mtime":1611925960598,"results":"130","hashOfConfig":"89"},{"size":3077,"mtime":1611925960599,"results":"131","hashOfConfig":"89"},{"size":4747,"mtime":1612089842427,"results":"132","hashOfConfig":"89"},{"size":3309,"mtime":1611824897710,"results":"133","hashOfConfig":"89"},{"size":150,"mtime":1612089842421,"results":"134","hashOfConfig":"89"},{"size":857,"mtime":1611824897733,"results":"135","hashOfConfig":"89"},{"size":1045,"mtime":1611824897747,"results":"136","hashOfConfig":"89"},{"size":2145,"mtime":1611925960611,"results":"137","hashOfConfig":"89"},{"size":304,"mtime":1611824897737,"results":"138","hashOfConfig":"89"},{"size":566,"mtime":1611824897743,"results":"139","hashOfConfig":"89"},{"size":424,"mtime":1611824897742,"results":"140","hashOfConfig":"89"},{"size":364,"mtime":1611824897741,"results":"141","hashOfConfig":"89"},{"size":703,"mtime":1611824897738,"results":"142","hashOfConfig":"89"},{"size":677,"mtime":1611824897739,"results":"143","hashOfConfig":"89"},{"size":976,"mtime":1611824897736,"results":"144","hashOfConfig":"89"},{"size":628,"mtime":1611824897735,"results":"145","hashOfConfig":"89"},{"size":553,"mtime":1611824897733,"results":"146","hashOfConfig":"89"},{"size":615,"mtime":1611824897734,"results":"147","hashOfConfig":"89"},{"size":312,"mtime":1611824897731,"results":"148","hashOfConfig":"89"},{"size":421,"mtime":1611824897732,"results":"149","hashOfConfig":"89"},{"size":940,"mtime":1611824897709,"results":"150","hashOfConfig":"89"},{"size":825,"mtime":1611824897729,"results":"151","hashOfConfig":"89"},{"size":1519,"mtime":1611824897708,"results":"152","hashOfConfig":"89"},{"size":832,"mtime":1611824897730,"results":"153","hashOfConfig":"89"},{"size":421,"mtime":1611824897728,"results":"154","hashOfConfig":"89"},{"size":522,"mtime":1611824897727,"results":"155","hashOfConfig":"89"},{"size":267,"mtime":1611824897728,"results":"156","hashOfConfig":"89"},{"size":1297,"mtime":1612089842465,"results":"157","hashOfConfig":"89"},{"size":1366,"mtime":1611925960600,"results":"158","hashOfConfig":"89"},{"size":382,"mtime":1612089842471,"results":"159","hashOfConfig":"89"},{"size":1291,"mtime":1612089842430,"results":"160","hashOfConfig":"89"},{"size":2373,"mtime":1612206240784,"results":"161","hashOfConfig":"89"},{"size":634,"mtime":1611925960669,"results":"162","hashOfConfig":"89"},{"size":20789,"mtime":1612206240788,"results":"163","hashOfConfig":"89"},{"size":2716,"mtime":1612086610766,"results":"164","hashOfConfig":"89"},{"size":7120,"mtime":1612086610852,"results":"165","hashOfConfig":"89"},{"size":375,"mtime":1612089842475,"results":"166","hashOfConfig":"89"},{"size":1850,"mtime":1612206240785,"results":"167","hashOfConfig":"89"},{"size":173,"mtime":1612089842471,"results":"168","hashOfConfig":"89"},{"size":2520,"mtime":1612203995703,"results":"169","hashOfConfig":"89"},{"size":1103,"mtime":1612203995682,"results":"170","hashOfConfig":"89"},{"size":1141,"mtime":1612203995724,"results":"171","hashOfConfig":"89"},{"size":3178,"mtime":1612203995722,"results":"172","hashOfConfig":"89"},{"size":2971,"mtime":1612203995680,"results":"173","hashOfConfig":"89"},{"size":4702,"mtime":1612203995702,"results":"174","hashOfConfig":"89"},{"size":3405,"mtime":1612203995701,"results":"175","hashOfConfig":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},"fui01a",{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"178"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"178"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"178"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"178"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"178"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"178"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"178"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"178"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"178"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"178"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"178"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"178"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"178"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"178"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"178"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"178"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"178"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"256","usedDeprecatedRules":"178"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"259","usedDeprecatedRules":"178"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"262","usedDeprecatedRules":"178"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"178"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"178"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"178"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"178"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"178"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"178"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"178"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"178"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"178"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"178"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"178"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"178"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"178"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"178"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"178"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"178"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"178"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"178"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"178"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"178"},"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\index.js",[],["392","393"],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\index.js",["394"],"import React, { Component } from \"react\";\r\nimport { GameEngine } from \"react-game-engine\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Physics from \"./systems/Physics\";\r\nimport Enemies from \"./systems/Enemy\";\r\nimport Scene from \"./systems/Scene\";\r\nimport BulletPhysics from \"./systems/Bullets\";\r\nimport Effects from \"./systems/Effects\";\r\nimport maingBG from \"../assets/sprite-sheets/bg.jpg\";\r\nimport { keyDown, keyUp, click } from \"./systems/Controls\";\r\nimport Factory from \"./factory/Factory\";\r\nimport Menu from \"./menu/Menu\";\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.gameEngine = null;\r\n    this.world = null;\r\n    this.engine = null;\r\n    this.menu = null;\r\n    this.container = React.createRef();\r\n    this.state = {\r\n      isStarted: false,\r\n      showMenu: true,\r\n      playerName: \"\",\r\n      levelWidth: 0,\r\n      levelHeight: 0,\r\n      running: false\r\n    };\r\n    this.factory = new Factory(this);\r\n    this.entities = this.factory.setupWorld();\r\n    this.entities.factory = this.factory;\r\n    window.addEventListener(\"click\", (e) => e.preventDefault());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n        id=\"game-container\"\r\n        style={{\r\n          background: `url(${maingBG})`,\r\n          backgroundAttachment: \"fixed\",\r\n          width: 1200,\r\n          height: 800,\r\n          overflow: \"hidden\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <Menu\r\n          ref={(ref) => {\r\n            this.menu = ref;\r\n          }}\r\n          game={this}\r\n        />\r\n        <Container\r\n          className={\"game-scene\"}\r\n          ref={this.container}\r\n          style={{\r\n            position: \"relative\",\r\n            overflow: \"visible\",\r\n            width: this.entities.levelWidth,\r\n            height: this.entities.levelHeight,\r\n            margin: \"auto\",\r\n            left: 0,\r\n            top: 0,\r\n            transition: \"0.2s ease-out 0s\",\r\n          }}\r\n        >\r\n          <GameEngine\r\n            stop={true}\r\n            ref={(ref) => {\r\n              this.gameEngine = ref;\r\n            }}\r\n            styles={{}}\r\n            systems={[\r\n              Scene,\r\n              Enemies,\r\n              keyDown,\r\n              keyUp,\r\n              BulletPhysics,\r\n              Physics,\r\n              Effects,\r\n            ]}\r\n            entities={this.factory.entities}\r\n          />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Enemy.js",["395","396"],"import Matter from 'matter-js';\r\nimport getFromEntities from '../lib/getFromEnitites';\r\n\r\nconst Enemies = (entities, screen) => {\r\n\r\n  const enemies = getFromEntities(entities, \"enemy\");\r\n  const player = entities.player;\r\n\r\n  enemies.forEach(enemy => {\r\n    enemy.AI && enemy.AI(entities)\r\n  });\r\n\r\n  return entities\r\n}\r\n\r\nexport default Enemies","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Physics.js",["397"],"import Matter from 'matter-js';\r\nimport getFromEntities from '../lib/getFromEnitites';\r\n\r\nconst Physics = (entities, screen) => {\r\n\r\n  if (!entities.player) { return entities};\r\n  const engine = entities.physics.engine;\r\n  const { time } = screen;\r\n  const actions = entities.controls.actions;\r\n  const settings = entities.controls.settings;\r\n  const player = entities.player;\r\n\r\n  if (actions.length === 0) {\r\n    player.angle >= 0 ? player.idleRight() : player.idleLeft();\r\n    player.animate();\r\n    Matter.Engine.update(engine, time.delta)\r\n    return entities;\r\n  };\r\n\r\n  if (actions.length === 1) {\r\n    const action = actions[0];\r\n    switch (action) {\r\n      case settings.moveRight:\r\n        player.moveRight();\r\n        break;\r\n      case settings.moveLeft:\r\n        player.moveLeft();\r\n        break;\r\n      case settings.jump:\r\n        player.jump();\r\n        break;\r\n      case settings.lookUp:\r\n        player.angle >= 0 ? player.rightlookUp() : player.leftlookUp();\r\n        break;\r\n      case settings.lookDown:\r\n        if (player.isJumping) {\r\n          player.forceMoveDown();\r\n        } else {\r\n          player.angle >= 0 ? player.rightlookDown() : player.leftlookDown();\r\n        }\r\n        break;\r\n      case settings.fire:\r\n        player.fire();\r\n        break;\r\n    };\r\n    player.animate()\r\n    Matter.Engine.update(engine, time.delta)\r\n    return entities;\r\n  };\r\n\r\n  if (actions.length > 1) {\r\n\r\n    let _fire;\r\n    let _jump;\r\n\r\n    if (actions.includes(settings.fire)) {\r\n      _fire = true;\r\n      player.fire();\r\n    }\r\n\r\n    const fireClear = actions.filter(el => el !== settings.fire);\r\n\r\n    if (fireClear.includes(settings.jump)) {\r\n      _jump = true;\r\n      /*\r\n        if (fire) {\r\n          player.jumpAndFire()\r\n        }\r\n      */\r\n      player.jump();\r\n    };\r\n\r\n    const withoutJump = fireClear.filter(el => el !== settings.jump).slice(0, 2).reverse();\r\n\r\n    if (withoutJump.includes(settings.moveRight) && withoutJump.includes(settings.lookUp)) {\r\n      player.moveRightAndLookUp();\r\n    } else if (withoutJump.includes(settings.moveRight) && withoutJump.includes(settings.lookDown)) {\r\n      player.moveRightAndLookDown();\r\n    } else if (withoutJump.includes(settings.moveLeft) && withoutJump.includes(settings.lookUp)) {\r\n      player.moveLeftAndLookUp();\r\n    } else if (withoutJump.includes(settings.moveLeft) && withoutJump.includes(settings.lookDown)) {\r\n      player.moveLeftAndLookDown()\r\n    } else if (withoutJump[0] === settings.moveLeft) {\r\n      player.moveLeft();\r\n    } else if (withoutJump[0] === settings.moveRight) {\r\n      player.moveRight();\r\n    } else if (withoutJump[0] === settings.moveUp) {\r\n      player.angle >= 0 ? player.rightlookUp() : player.leftlookUp();\r\n    } else if (withoutJump[0] === settings.moveDown) {\r\n      player.angle >= 0 ? player.rightlookUp() : player.leftlookUp();\r\n    };\r\n  };\r\n  \r\n  if (player.isJumping) {\r\n    player.forceJump ? player.forceMoveDown() : player.jump()\r\n  };\r\n\r\n  player.animate();\r\n\r\n  Matter.Engine.update(engine, time.delta)\r\n  return entities;\r\n\r\n}\r\n\r\nexport default Physics","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Scene.js",["398"],"import { RGB_PVRTC_2BPPV1_Format } from 'three';\r\nimport getFromEntities from '../lib/getFromEnitites';\r\n\r\nconst pifagor = (a, b) => Math.sqrt(a ** 2 + b ** 2);\r\n\r\nconst Scene = (entities, screen) => {\r\n\r\n  const player = entities.player;\r\n\r\n  if (!player) {\r\n    return entities\r\n  };\r\n\r\n  const factory = entities.factory;\r\n\r\n  const camera = document.getElementById(\"game-container\");\r\n  const cameraWidth = camera.offsetWidth;\r\n  const cameraHeight = camera.offsetHeight;\r\n\r\n  const scene = document.querySelector('.game-scene');\r\n  const sceneLeft = Math.abs(scene.offsetLeft);\r\n  const sceneTop = Math.abs(scene.offsetTop);\r\n  const sceneHeight = scene.offsetHeight;\r\n\r\n  const playerLeft = player.body.position.x;\r\n  const playerTop = player.body.position.y;\r\n  const playerWidth = player.width;\r\n  const playerHeight = player.height;\r\n\r\n  const topCameraSpace = (cameraHeight - playerHeight) / 2;\r\n  const leftCameraSpace = (cameraWidth - playerWidth) / 2;\r\n\r\n  const triggers = factory.triggers;\r\n\r\n  if (entities.scene.fixed && entities.scene.fixedNotDone) {\r\n    const { left, top } = entities.scene.fixed;\r\n    scene.style.transitionDuration = \"5s\";\r\n    scene.style.left = `${-left}px`;\r\n    scene.style.top = `${-top}px`;\r\n    entities.sceneLeft = -left;\r\n    entities.sceneTop = -top;\r\n    entities.scene.fixedNotDone = false;\r\n    entities.disableMoving = true;\r\n\r\n    getFromEntities(entities, \"static\").forEach(element => {\r\n      element.isVisible = true;\r\n    });\r\n\r\n    setTimeout(() => {\r\n      scene.style.transitionDuration = \"0.1s\";\r\n      entities.disableMoving = false;\r\n    }, 5000);\r\n\r\n    return entities\r\n  };\r\n\r\n  if (entities.scene.fixed && !entities.scene.fixedNotDone) {\r\n    entities.sceneLeft = -sceneLeft;\r\n    entities.sceneTop = -sceneTop;\r\n    return entities\r\n  }\r\n\r\n  triggers.forEach((trigger, idx) => {\r\n    if (trigger.condition(factory)) {\r\n      trigger.action(factory);\r\n      trigger.done = true;\r\n    }\r\n  });\r\n\r\n  const left = leftCameraSpace - playerLeft;\r\n  const top = topCameraSpace - playerTop;\r\n\r\n  scene.style.top = `${0}px`;\r\n  entities.sceneTop = top;\r\n\r\n  if (playerLeft >= leftCameraSpace) {\r\n    if (playerLeft - sceneLeft >= leftCameraSpace) {\r\n      scene.style.left = `${left}px`;\r\n      entities.sceneLeft = left;\r\n    }\r\n\r\n    Object.values(entities).forEach(entity => {\r\n      if (entity.type === \"background\") {\r\n        entity.move(left);\r\n      };\r\n    });\r\n  };\r\n\r\n  scene.style.top = `${top}px`\r\n\r\n  Object.values(entities).forEach(entity => {\r\n    if (entity.body && entity.type !== \"player\") {\r\n\r\n      const centerX = entity.body.position.x;\r\n      const centerY = entity.body.position.y;\r\n      const halfWidth = entity.width / 2;\r\n      const halfHeight = entity.height / 2;\r\n      const entityDig = pifagor(halfHeight, halfWidth);\r\n\r\n      if (centerX + halfWidth < sceneLeft) {\r\n        factory.removeUnit(entity)\r\n      } else {\r\n        const halfCameraWidth = cameraWidth / 2;\r\n        const halfCameraHeight = cameraHeight / 2;\r\n        const sceneCenterX = sceneLeft + halfCameraWidth;\r\n        const sceneCenterY = sceneTop + halfCameraHeight;\r\n        const sceneDig = pifagor(halfCameraWidth, halfCameraHeight);\r\n  \r\n        const deltaX = sceneCenterX - centerX;\r\n        const deltaY = sceneCenterY - centerY;\r\n\r\n        entity.isVisible = pifagor(deltaX, deltaY) < entityDig + sceneDig;\r\n      }\r\n      \r\n    };  \r\n  });\r\n\r\n  getFromEntities(entities, \"enemy\").forEach(enemy => {\r\n    if (enemy.body.position.x < sceneLeft || enemy.body.position.y > sceneHeight) {\r\n      factory.removeUnit(enemy)\r\n    }\r\n  });\r\n\r\n  return entities\r\n\r\n}\r\n\r\nexport default Scene","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Controls\\index.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Controls\\keydown.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Controls\\click.js",["399"],"import Matter from 'matter-js';\r\n\r\nexport default function onClick (entities, { input }) {\r\n\r\n  const { payload } = input.find(x => x.name === 'onMouseDown') || {};\r\n\r\n  if (payload) {\r\n\r\n  }\r\n  return entities\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Controls\\keyup.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Bullets.js",["400"],"import Matter from 'matter-js';\r\nimport getFromEntities from '../lib/getFromEnitites';\r\n\r\nconst BulletsPhysics = (entities, screen) => {\r\n\r\n  const gravity = entities.physics.world.gravity;\r\n\r\n  const bullets = getFromEntities(entities, \"bullet\");\r\n  bullets.forEach(bullet => {\r\n    bullet.move(gravity);\r\n  });\r\n\r\n  return entities\r\n}\r\n\r\nexport default BulletsPhysics","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Controls.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\matter\\index.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\matter\\collisions.js",["401"],"import Matter from 'matter-js';\r\nimport getFromEntities from '../lib/getFromEnitites'\r\n\r\nexport default function addCollosionsHandlers() {\r\n\r\n    const entities = this.factory.entities;\r\n    Matter.Events.on(this.factory.engine, \"collisionStart\", (event) => {\r\n\r\n      const player = entities.player;\r\n      const enemies = getFromEntities(entities, \"enemy\");\r\n      const statics = getFromEntities(entities, \"static\");\r\n      const bullets = getFromEntities(entities, \"bullet\");\r\n      const contact = event.pairs[0];\r\n      const bodyA = contact.bodyA;\r\n      const bodyB = contact.bodyB;\r\n\r\n\r\n      /* Каллозии (соприкосновения тел в matter.js) содержат в себе pairs => \r\n        т. е. тела, которые соприкасаются. Нам нужно определить, какие два тела\r\n        соприкоснулись, и исходя из этого, прописать, что дальше должно произойти\r\n      */\r\n\r\n      const isPlayerColide = _ => bodyA.id === player.body.id || bodyB.id === player.body.id;\r\n\r\n      const isBulletColide = _ => bullets.find(el => el.body.id === bodyA.id) || bullets.find(el => el.body.id === bodyB.id);\r\n\r\n      const isStaticColide = _ => statics.find(el => el.body.id === bodyA.id) || statics.find(el => el.body.id === bodyB.id);\r\n\r\n      const isEnemyColide = _ => enemies.find(el => el.body.id === bodyA.id) || enemies.find(el => el.body.id === bodyB.id);\r\n\r\n      const isWaterColide = _ => statics.find(el => el.type === \"water\" && el.body.id === bodyA.id) || \r\n                                 statics.find(el => el.type === \"water\" && el.body.id === bodyB.id);\r\n\r\n      const bullet = isBulletColide();\r\n      const enemy = isEnemyColide();\r\n      const staticUnit = isStaticColide();\r\n\r\n      /* если одно из тел ИГРОК, то: */\r\n\r\n      if (isPlayerColide()) {\r\n\r\n        if (enemy) {\r\n          if (entities.player.forceJump) {\r\n            entities.player.forceJump = false;\r\n            entities.player.isJumping = false;\r\n            enemy.die();\r\n          } else {\r\n            player.die()\r\n          }\r\n\r\n        };\r\n\r\n        /* проверка - приземлился ли игрок */\r\n        if (staticUnit) {\r\n          if (staticUnit.type === \"water\") {\r\n            player.swim()\r\n          } else if (staticUnit && contact.collision.normal.y === 1) {\r\n            entities.player.isJumping = false;\r\n            entities.player.forceJump = false;\r\n          };\r\n        };\r\n        /* проверка - полпала ли пуля в игрока */\r\n        if (bullet) {\r\n          /* если да = 1. игрок получает урон */\r\n          if (bullet.shooter !== \"player\") {\r\n            player.hit(bullet.damage);\r\n            /* 2. пуля попадает в игрока и исчазает */\r\n            bullet.hitTarget() \r\n          };\r\n        }\r\n\r\n        /* проверка - если враг достиг игрока, игрок умирает */\r\n\r\n      };\r\n\r\n      /* Если один из соприкасающихся тел - враг, ТО */\r\n      if (isEnemyColide()) {\r\n\r\n        /* проверка - попала ли пуля во врага */\r\n        if (bullet) {\r\n          /* если да => враг получает урон */\r\n          enemy.hit(bullet.damage);\r\n          bullet.hitTarget();\r\n        };\r\n\r\n        /* проверка => приземлился ли враг (для случая если он вообьще может прыгать) */\r\n        if (staticUnit && contact.collision.normal.y === 1) {\r\n          enemy.isJumping = false;\r\n        };\r\n      };\r\n\r\n      if (isBulletColide()) {\r\n        if (staticUnit) {\r\n          bullet.hitTarget();\r\n        }\r\n      }\r\n    });\r\n  };\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\Factory.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\1lvl\\level1.js",["402","403","404","405"],"import Farm from './farm/farm';\r\nimport Nature from './nature/nature';\r\nimport StaticItem from '../../entities/Elements/Static';\r\nimport BgItem from '../../entities/Elements/Background';\r\nimport Player from '../../entities/Units/Player/Player';\r\nimport WaterItem from '../../entities/Elements/Water';\r\n\r\nconst blockSize = Nature.blockSize;\r\nconst waterHeight = Nature.waterHeight;\r\nconst corniceHeight = Nature.corniceHeight;\r\nconst levelWidth = blockSize * 100;\r\nconst levelHeight = blockSize * 30;\r\nconst height = levelHeight;\r\nconst floor = height - blockSize * 5;\r\n\r\n\r\nconst backgrounds = [\r\n\tFarm.hills.element(0, height - blockSize * 3 - Farm.hills.height, levelWidth)\r\n];\r\n\r\nconst loadBackgrounds = factory => {\r\n\tbackgrounds.forEach((el, idx) => {\r\n\t\tconst entity = new BgItem({ ...el, factory, element: \"water\" });\r\n\t\tfactory.addToBodies(entity.body);\r\n\t\tfactory.addToEntities(entity);\r\n\t});\r\n};\r\n\r\n/**  Земля    \r\n*!Земля с травой слева (х, y)\r\nNature.statics.ground.upper.left(blockSize * 0, height - blockSize * 4), \r\n*!Земля с травой внутри (х, y, ширина)\r\nNature.statics.ground.upper.middle(blockSize * 1, height - blockSize * 4, blockSize * 2), \r\n*!Земля с травой справа (х, y)\r\nNature.statics.ground.upper.right(blockSize * 5, height - blockSize * 7), \r\n\r\n*!Земля внутри слева (х, y, высота)\r\nNature.statics.ground.vertical.left(blockSize * 0, height - blockSize * 3, blockSize * 3),\r\n*!Земля внутри (х, y, ширина, высота)\r\nNature.statics.ground.inside(blockSize, height - blockSize * 3, blockSize * 4, blockSize * 3),\r\n*!Земля внутри справа (х, y, высота)\r\nNature.statics.ground.vertical.right(blockSize * 5, height - blockSize * 6, blockSize * 6),\r\n\r\n*!Земля низ слева (х, y)\r\nNature.statics.ground.down.left(blockSize * 0, height),\r\n*!Земля низ внутри (х, y, ширина)\r\nNature.statics.ground.down.middle(blockSize * 1, height, blockSize * 4), \r\n*!Земля низ справа (х, y)\r\nNature.statics.ground.down.right(blockSize * 5, height),\r\n**/\r\n\r\n\r\n/**  Платформа\r\n *!Платформа слева (x,y)\r\nNature.statics.ground.cornice.left(blockSize * 34, height - blockSize * 6),\r\n*!Платформа внутри (x,y)\r\nNature.statics.ground.cornice.middle(blockSize * 35, height - blockSize * 6, blockSize),\r\n*!Платформа справа (x,y)\r\nNature.statics.ground.cornice.right(blockSize * 36, height - blockSize * 6),\r\n**/\r\nconst ground = [\r\n\tNature.statics.ground.upper.left(blockSize * 0, height - blockSize * 4),\r\n\tNature.statics.ground.upper.middle(blockSize * 1, height - blockSize * 4, blockSize * 2),\r\n\tNature.statics.ground.upper.rightCorner(blockSize * 3, height - blockSize * 4, blockSize),\r\n\tNature.statics.ground.corner.right(blockSize * 4, height - blockSize * 4),\r\n\tNature.statics.ground.upper.left(blockSize * 4, height - blockSize * 7),\r\n\tNature.statics.ground.upper.right(blockSize * 5, height - blockSize * 7),\r\n\tNature.statics.ground.inside(blockSize, height - blockSize * 3, blockSize * 4, blockSize * 3),\r\n\tNature.statics.ground.vertical.left(blockSize * 4, height - blockSize * 6, blockSize * 2),\r\n\tNature.statics.ground.vertical.left(blockSize * 0, height - blockSize * 3, blockSize * 3),\r\n\tNature.statics.ground.vertical.right(blockSize * 5, height - blockSize * 6, blockSize * 6),\r\n\tNature.statics.ground.down.left(blockSize * 0, height),\r\n\tNature.statics.ground.down.middle(blockSize * 1, height, blockSize * 4),\r\n\tNature.statics.ground.down.right(blockSize * 5, height),\r\n\r\n\tNature.statics.ground.upper.left(blockSize * 9, height - blockSize * 4),\r\n\tNature.statics.ground.upper.middle(blockSize * 10, height - blockSize * 4, blockSize * 3),\r\n\tNature.statics.ground.upper.right(blockSize * 13, height - blockSize * 4),\r\n\tNature.statics.ground.vertical.left(blockSize * 9, height - blockSize * 3, blockSize * 3),\r\n\tNature.statics.ground.inside(blockSize * 10, height - blockSize * 3, blockSize * 3, blockSize * 3),\r\n\tNature.statics.ground.vertical.right(blockSize * 13, height - blockSize * 3, blockSize * 3),\r\n\tNature.statics.ground.down.left(blockSize * 9, height),\r\n\tNature.statics.ground.down.middle(blockSize * 10, height, blockSize * 3),\r\n\tNature.statics.ground.down.right(blockSize * 13, height),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 18, height - blockSize * 6),\r\n\tNature.statics.ground.cornice.middle(blockSize * 19, height - blockSize * 6, blockSize * 3),\r\n\tNature.statics.ground.cornice.right(blockSize * 22, height - blockSize * 6),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 26, height - blockSize * 6),\r\n\tNature.statics.ground.cornice.middle(blockSize * 27, height - blockSize * 6, blockSize * 2),\r\n\tNature.statics.ground.cornice.right(blockSize * 29, height - blockSize * 6),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 34, height - blockSize * 6),\r\n\tNature.statics.ground.cornice.middle(blockSize * 35, height - blockSize * 6, blockSize),\r\n\tNature.statics.ground.cornice.right(blockSize * 36, height - blockSize * 6),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 42, height - blockSize * 6),\r\n\tNature.statics.ground.cornice.right(blockSize * 43, height - blockSize * 6),\r\n\r\n\r\n\tNature.statics.ground.upper.left(blockSize * 47, height - blockSize * 9),\r\n\tNature.statics.ground.upper.middle(blockSize * 48, height - blockSize * 9, blockSize * 15),\r\n\tNature.statics.ground.vertical.left(blockSize * 47, height - blockSize * 8, blockSize * 8),\r\n\tNature.statics.ground.inside(blockSize * 48, height - blockSize * 8, blockSize * 31, blockSize * 8),\r\n\tNature.statics.ground.upper.rightCorner(blockSize * 76, height - blockSize * 12, blockSize),\r\n\r\n\r\n\tNature.statics.ground.down.left(blockSize * 47, height),\r\n\tNature.statics.ground.down.middle(blockSize * 48, height, blockSize * 32),\r\n\tNature.statics.ground.down.right(blockSize * 94, height),\r\n\r\n\tNature.statics.ground.vertical.left(blockSize * 63, height - blockSize * 11, blockSize * 2),\r\n\tNature.statics.ground.inside(blockSize * 64, height - blockSize * 11, blockSize * 15, blockSize * 3),\r\n\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 75, height - blockSize * 15),\r\n\tNature.statics.ground.cornice.middle(blockSize * 76, height - blockSize * 15, blockSize * 2),\r\n\r\n\tNature.statics.ground.upper.left(blockSize * 63, height - blockSize * 12),\r\n\tNature.statics.ground.upper.middle(blockSize * 64, height - blockSize * 12, blockSize * 12),\r\n\tNature.statics.ground.vertical.left(blockSize * 77, height - blockSize * 20, blockSize * 8),\r\n\tNature.statics.ground.inside(blockSize * 78, height - blockSize * 20, blockSize * 1, blockSize * 9),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 52, height - blockSize * 12),\r\n\tNature.statics.ground.cornice.middle(blockSize * 53, height - blockSize * 12, blockSize),\r\n\tNature.statics.ground.cornice.right(blockSize * 54, height - blockSize * 12),\r\n\r\n\tNature.statics.ground.cornice.right(blockSize * 62, height - blockSize * 15),\r\n\tNature.statics.ground.cornice.middle(blockSize * 59, height - blockSize * 15, blockSize * 3),\r\n\tNature.statics.ground.down.middle(blockSize * 59, height - blockSize * 12, blockSize),\r\n\tNature.statics.ground.inside(blockSize * 59, height - blockSize * 21, blockSize * 1, blockSize * 9),\r\n\r\n\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 76, height - blockSize * 21),\r\n\tNature.statics.ground.cornice.middle(blockSize * 77, height - blockSize * 21, blockSize * 1),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 82, height - blockSize * 17),\r\n\tNature.statics.ground.cornice.middle(blockSize * 83, height - blockSize * 17, blockSize * 7),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 82, height - blockSize * 11),\r\n\tNature.statics.ground.cornice.middle(blockSize * 83, height - blockSize * 11, blockSize * 7),\r\n\r\n\tNature.statics.ground.cornice.middle(blockSize * 79, height - blockSize * 21, blockSize * 7),\r\n\tNature.statics.ground.cornice.right(blockSize * 86, height - blockSize * 21),\r\n\r\n\tNature.statics.ground.cornice.middle(blockSize * 79, height - blockSize * 14, blockSize * 7),\r\n\tNature.statics.ground.cornice.right(blockSize * 86, height - blockSize * 14),\r\n\r\n\tNature.statics.ground.vertical.right(blockSize * 79, height - blockSize * 20, blockSize * 16),\r\n\r\n\tNature.statics.ground.cornice.right(blockSize * 71, height - blockSize * 18),\r\n\tNature.statics.ground.cornice.middle(blockSize * 69, height - blockSize * 18, blockSize * 2),\r\n\r\n\tNature.statics.ground.down.middle(blockSize * 69, height - blockSize * 15, blockSize),\r\n\t//Nature.statics.ground.inside(blockSize * 69, height - blockSize * 27, blockSize * 1, blockSize * 13),\r\n\r\n\tNature.statics.ground.upper.left(blockSize * 77, height - blockSize * 21),\r\n\tNature.statics.ground.upper.middle(blockSize * 78, height - blockSize * 21, blockSize * 1),\r\n\tNature.statics.ground.upper.right(blockSize * 79, height - blockSize * 21),\r\n\r\n\tNature.statics.ground.inside(blockSize * 60, height - blockSize * 27, blockSize * 9, blockSize * 6),\r\n\tNature.statics.ground.down.middle(blockSize * 60, height - blockSize * 21, blockSize * 9),\r\n\tNature.statics.ground.inside(blockSize * 69, height - blockSize * 27, blockSize * 21, blockSize * 1),\r\n\tNature.statics.ground.down.middle(blockSize * 69, height - blockSize * 26, blockSize * 20),\r\n\r\n\tNature.statics.ground.upper.left(blockSize * 59, height - blockSize * 28),\r\n\tNature.statics.ground.upper.middle(blockSize * 60, height - blockSize * 28, blockSize * 110),\r\n\r\n\tNature.statics.ground.vertical.left(blockSize * 89, height - blockSize * 25, blockSize * 13),\r\n\tNature.statics.ground.inside(blockSize * 90, height - blockSize * 27, blockSize * 80, blockSize * 11),\r\n\r\n\tNature.statics.ground.inside(blockSize * 79, height - blockSize * 3, blockSize * 1, blockSize * 3),\r\n\tNature.statics.ground.inside(blockSize * 86, height - blockSize * 5, blockSize * 8, blockSize * 5),\r\n\tNature.statics.ground.upper.right(blockSize * 80, height - blockSize * 4),\r\n\tNature.statics.ground.vertical.right(blockSize * 80, height - blockSize * 3, blockSize * 3),\r\n\r\n\tNature.statics.ground.down.right(blockSize * 80, height),\r\n\r\n\tNature.statics.ground.upper.left(blockSize * 85, height - blockSize * 6),\r\n\tNature.statics.ground.upper.middle(blockSize * 86, height - blockSize * 6, blockSize * 8),\r\n\tNature.statics.ground.upper.right(blockSize * 94, height - blockSize * 6),\r\n\tNature.statics.ground.vertical.left(blockSize * 85, height - blockSize * 5, blockSize * 5),\r\n\tNature.statics.ground.vertical.right(blockSize * 94, height - blockSize * 5, blockSize * 5),\r\n\tNature.statics.ground.down.left(blockSize * 85, height),\r\n\tNature.statics.ground.down.middle(blockSize * 86, height, blockSize * 8),\r\n\r\n\tNature.statics.ground.inside(blockSize * 90, height - blockSize * 16, blockSize * 4, blockSize * 5),\r\n\tNature.statics.ground.inside(blockSize * 94, height - blockSize * 16, blockSize * 6, blockSize * 3),\r\n\tNature.statics.ground.inside(blockSize * 100, height - blockSize * 16, blockSize * 2, blockSize * 4),\r\n\tNature.statics.ground.inside(blockSize * 102, height - blockSize * 16, blockSize * 6, blockSize * 2),\r\n\tNature.statics.ground.inside(blockSize * 108, height - blockSize * 16, blockSize * 2, blockSize * 3),\r\n\tNature.statics.ground.inside(blockSize * 110, height - blockSize * 16, blockSize * 6, blockSize * 1),\r\n\tNature.statics.ground.inside(blockSize * 116, height - blockSize * 16, blockSize * 2, blockSize * 2),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 99, height - blockSize * 8),\r\n\tNature.statics.ground.cornice.middle(blockSize * 100, height - blockSize * 8, blockSize * 2),\r\n\tNature.statics.ground.cornice.right(blockSize * 102, height - blockSize * 8),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 107, height - blockSize * 9),\r\n\tNature.statics.ground.cornice.middle(blockSize * 108, height - blockSize * 9, blockSize * 2),\r\n\tNature.statics.ground.cornice.right(blockSize * 110, height - blockSize * 9),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 115, height - blockSize * 10),\r\n\tNature.statics.ground.cornice.middle(blockSize * 116, height - blockSize * 10, blockSize * 2),\r\n\tNature.statics.ground.cornice.right(blockSize * 118, height - blockSize * 10),\r\n\r\n\tNature.statics.ground.down.middle(blockSize * 89, height - blockSize * 11, blockSize * 5),\r\n\tNature.statics.ground.down.right(blockSize * 94, height - blockSize * 11),\r\n\r\n\tNature.statics.ground.down.left(blockSize * 99, height - blockSize * 12),\r\n\tNature.statics.ground.down.middle(blockSize * 100, height - blockSize * 12, blockSize * 2),\r\n\tNature.statics.ground.down.right(blockSize * 102, height - blockSize * 12),\r\n\r\n\tNature.statics.ground.down.left(blockSize * 107, height - blockSize * 13),\r\n\tNature.statics.ground.down.middle(blockSize * 108, height - blockSize * 13, blockSize * 2),\r\n\tNature.statics.ground.down.right(blockSize * 110, height - blockSize * 13),\r\n\r\n\tNature.statics.ground.down.left(blockSize * 115, height - blockSize * 14),\r\n\tNature.statics.ground.down.middle(blockSize * 116, height - blockSize * 14, blockSize * 2),\r\n\tNature.statics.ground.down.right(blockSize * 118, height - blockSize * 14),\r\n\r\n\tNature.statics.ground.down.middle(blockSize * 95, height - blockSize * 13, blockSize * 4),\r\n\tNature.statics.ground.down.middle(blockSize * 103, height - blockSize * 14, blockSize * 4),\r\n\tNature.statics.ground.down.middle(blockSize * 111, height - blockSize * 15, blockSize * 4),\r\n\tNature.statics.ground.down.middle(blockSize * 119, height - blockSize * 16, blockSize * 14),\r\n\tNature.statics.ground.down.middle(blockSize * 134, height - blockSize * 16, blockSize * 5),\r\n\tNature.statics.ground.down.middle(blockSize * 141, height - blockSize * 16, blockSize * 19),\r\n\r\n\tNature.statics.ground.vertical.right(blockSize * 94, height - blockSize * 12, blockSize * 1),\r\n\tNature.statics.ground.vertical.right(blockSize * 102, height - blockSize * 13, blockSize * 1),\r\n\tNature.statics.ground.vertical.right(blockSize * 110, height - blockSize * 14, blockSize * 1),\r\n\tNature.statics.ground.vertical.right(blockSize * 118, height - blockSize * 15, blockSize * 1),\r\n\r\n\tNature.statics.ground.vertical.left(blockSize * 124, height - blockSize * 9, blockSize * 9),\r\n\tNature.statics.ground.vertical.right(blockSize * 126, height - blockSize * 8, blockSize * 5),\r\n\tNature.statics.ground.inside(blockSize * 125, height - blockSize * 9, blockSize * 1, blockSize * 9),\r\n\tNature.statics.ground.inside(blockSize * 126, height - blockSize * 2, blockSize * 11, blockSize * 2),\r\n\r\n\tNature.statics.ground.upper.left(blockSize * 124, height - blockSize * 10),\r\n\tNature.statics.ground.upper.middle(blockSize * 125, height - blockSize * 10, blockSize * 2),\r\n\t// Nature.statics.ground.upper.right(blockSize * 127, height - blockSize * 10),\r\n\tNature.statics.ground.cornice.middle(blockSize * 128, height - blockSize * 9, blockSize * 6),\r\n\r\n\tNature.statics.ground.cornice.middle(blockSize * 128, height - blockSize * 12, blockSize * 1),\r\n\tNature.statics.ground.cornice.right(blockSize * 129, height - blockSize * 12),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 131, height - blockSize * 12),\r\n\tNature.statics.ground.cornice.middle(blockSize * 132, height - blockSize * 12, blockSize * 1),\r\n\tNature.statics.ground.vertical.left(blockSize * 127, height - blockSize * 12, blockSize * 2),\r\n\tNature.statics.ground.upper.left(blockSize * 127, height - blockSize * 12),\r\n\tNature.statics.ground.vertical.left(blockSize * 133, height - blockSize * 15, blockSize * 3),\r\n\r\n\tNature.statics.ground.upper.middle(blockSize * 127, height - blockSize * 3, blockSize * 10),\r\n\tNature.statics.ground.upper.right(blockSize * 137, height - blockSize * 3),\r\n\tNature.statics.ground.vertical.right(blockSize * 137, height - blockSize * 2, blockSize * 2),\r\n\tNature.statics.ground.down.middle(blockSize * 141, height - blockSize * 16, blockSize * 25),\r\n\tNature.statics.ground.down.left(blockSize * 124, height),\r\n\tNature.statics.ground.down.middle(blockSize * 125, height, blockSize * 12),\r\n\tNature.statics.ground.down.right(blockSize * 137, height),\r\n\tNature.statics.ground.down.middle(blockSize * 127, height - blockSize * 9, blockSize * 1),\r\n\r\n\tNature.statics.ground.upper.left(blockSize * 134, height - blockSize * 10),\r\n\tNature.statics.ground.upper.right(blockSize * 135, height - blockSize * 10),\r\n\tNature.statics.ground.upper.left(blockSize * 137, height - blockSize * 10),\r\n\tNature.statics.ground.upper.middle(blockSize * 138, height - blockSize * 10, blockSize * 2),\r\n\tNature.statics.ground.vertical.left(blockSize * 139, height - blockSize * 15, blockSize * 7),\r\n\tNature.statics.ground.vertical.right(blockSize * 140, height - blockSize * 15, blockSize * 7),\r\n\tNature.statics.ground.down.left(blockSize * 139, height - blockSize * 8),\r\n\tNature.statics.ground.down.right(blockSize * 140, height - blockSize * 8),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 129, height - blockSize * 6),\r\n\tNature.statics.ground.cornice.middle(blockSize * 130, height - blockSize * 6, blockSize * 8),\r\n\tNature.statics.ground.cornice.right(blockSize * 138, height - blockSize * 6),\r\n\tNature.statics.ground.upper.left(blockSize * 136, height - blockSize * 7),\r\n\tNature.statics.ground.upper.middle(blockSize * 137, height - blockSize * 7, blockSize * 1),\r\n\tNature.statics.ground.upper.right(blockSize * 138, height - blockSize * 7),\r\n\tNature.statics.ground.down.left(blockSize * 136, height - blockSize * 6),\r\n\tNature.statics.ground.down.middle(blockSize * 137, height - blockSize * 6, blockSize * 1),\r\n\tNature.statics.ground.down.right(blockSize * 138, height - blockSize * 6),\r\n\r\n\tNature.statics.ground.upper.middle(blockSize * 139, height - blockSize * 4, blockSize * 1),\r\n\tNature.statics.ground.inside(blockSize * 139, height - blockSize * 3, blockSize * 1, blockSize * 3),\r\n\tNature.statics.ground.down.middle(blockSize * 139, height, blockSize * 1),\r\n\tNature.statics.ground.upper.left(blockSize * 145, height - blockSize * 5),\r\n\tNature.statics.ground.vertical.left(blockSize * 145, height - blockSize * 4, blockSize * 4),\r\n\tNature.statics.ground.down.left(blockSize * 145, height, blockSize * 1),\r\n\tNature.statics.ground.upper.middle(blockSize * 146, height - blockSize * 5, blockSize * 20),\r\n\tNature.statics.ground.inside(blockSize * 146, height - blockSize * 4, blockSize * 21, blockSize * 4),\r\n\tNature.statics.ground.down.middle(blockSize * 146, height, blockSize * 21),\r\n\r\n\tNature.statics.ground.down.left(blockSize * 149, height - blockSize * 7),\r\n\tNature.statics.ground.down.right(blockSize * 150, height - blockSize * 7),\r\n\tNature.statics.ground.vertical.left(blockSize * 149, height - blockSize * 15, blockSize * 8),\r\n\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 157, height - blockSize * 8),\r\n\tNature.statics.ground.cornice.middle(blockSize * 158, height - blockSize * 8, blockSize * 2),\r\n\tNature.statics.ground.cornice.right(blockSize * 160, height - blockSize * 8),\r\n\r\n\tNature.statics.ground.cornice.middle(blockSize * 150, height - blockSize * 11, blockSize * 3),\r\n\tNature.statics.ground.cornice.right(blockSize * 153, height - blockSize * 11),\r\n\tNature.statics.ground.vertical.right(blockSize * 150, height - blockSize * 15, blockSize * 8),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 158, height - blockSize * 13),\r\n\tNature.statics.ground.cornice.middle(blockSize * 159, height - blockSize * 13, blockSize * 2),\r\n\tNature.statics.ground.cornice.right(blockSize * 161, height - blockSize * 13),\r\n\r\n\tNature.statics.ground.vertical.left(blockSize * 166, height - blockSize * 15, blockSize * 10),\r\n\tNature.statics.ground.inside(blockSize * 167, height - blockSize * 16, blockSize * 10, blockSize * 16),\r\n\r\n\r\n];\r\n\r\nconst loadGround = factory => {\r\n\tground.forEach((el) => {\r\n\t\tconst entity = new StaticItem({ ...el, factory, element: \"ground\" });\r\n\t\tfactory.addToBodies(entity.body);\r\n\t\tfactory.addToEntities(entity);\r\n\t})\r\n};\r\n\r\nconst water = [\r\n\r\n\tNature.statics.water.up(blockSize * 0, height - blockSize * 3 - waterHeight, blockSize * 124),\r\n\tNature.statics.water.inside(blockSize * 0, height - blockSize * 3, blockSize * 124, blockSize * 6),\r\n\r\n\tNature.statics.water.up(blockSize * 135, height - blockSize * 2 - waterHeight, blockSize * 11),\r\n\tNature.statics.water.inside(blockSize * 135, height - blockSize * 2, blockSize * 11, blockSize * 3),\r\n\r\n];\r\n\r\nconst loadWater = factory => {\r\n\twater.forEach((el, idx) => {\r\n\t\tconst entity = new WaterItem({ ...el, factory, element: \"water\" });\r\n\t\tfactory.addToBodies(entity.body);\r\n\t\tfactory.addToEntities(entity);\r\n\t})\r\n};\r\n\r\nconst loadtTriggers = (factory) => {\r\n\tfactory.triggers = [\r\n\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 200 && factory.triggers[0].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 1800, 200),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 200 && factory.triggers[1].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 800, height - blockSize * 5, {\r\n\t\t\t\tfrom: 600,\r\n\t\t\t\tto: 1000\r\n\t\t\t}),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 1000 && factory.triggers[2].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 2300, 1550),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 2200 && factory.triggers[3].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 3500, 1550),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 2700 && factory.triggers[4].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 4070, 1406),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 3300 && factory.triggers[5].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 4600, 1184),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 3500 && factory.triggers[6].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 4800, 1036),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 4500 && factory.triggers[7].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 5800, 518),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 5000 && factory.triggers[8].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 6300, 518),\r\n\t\t\tdone: false,\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 5000 && factory.triggers[9].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 6300, 814),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 5000 && factory.triggers[10].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 6300, 1110),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 5000 && factory.triggers[11].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 6300, 1332),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 5200 && factory.triggers[12].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 6500, 1628),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 5600 && factory.triggers[13].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 6900, 1650),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 6400 && factory.triggers[14].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 7700, 1406),\r\n\t\t\tdone: false,\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 6850 && factory.triggers[15].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 8150, 1332),\r\n\t\t\tdone: false,\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 7350 && factory.triggers[16].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 8650, 1258),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 8100 && factory.triggers[17].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 9400, 1332),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 8500 && factory.triggers[18].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 9800, 1480),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 8500 && factory.triggers[19].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 9800, 1702),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 8500 && factory.triggers[20].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 9800, 1850),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 8850 && factory.triggers[21].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 10150, 1332),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 9350 && factory.triggers[22].done === false,\r\n\t\t\taction: (factory) => factory.addBird.call(factory, 10650, 1776),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 10700 && factory.triggers[23].done === false,\r\n\t\t\taction: (factory) => factory.addGolem.call(factory, 11000, 1776),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= 11300 && factory.triggers[24].done === false,\r\n\t\t\taction: (factory) => {\r\n\t\t\t\tfactory.addBoss1.call(factory, 12000, height - blockSize * 7);\r\n\t\t\t\tfactory.fixCamera.call(factory, 11125, height - blockSize * 15);\r\n\t\t\t},\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t]\r\n};\r\n\r\nconst setup = factory => {\r\n\tloadGround(factory);\r\n\tloadWater(factory);\r\n\tloadBackgrounds(factory);\r\n\tloadtTriggers(factory);\r\n\treturn {\r\n\t\tlevelWidth, levelHeight, playerStart: {\r\n\t\t\tx: 11000,\r\n\t\t\ty: height - blockSize * 7\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default {\r\n\tsetup: (factory) => setup(factory)\r\n};","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\1lvl\\nature\\nature.js",["406"],"import cornice from './assets/cornice.png'\r\nimport corniceCorner from './assets/corniceCorner.png';\r\nimport down from './assets/down.png';\r\nimport downCorner from './assets/downCorner.png';\r\nimport middle from './assets/middle.png';\r\nimport corner from './assets/corner.png';\r\nimport up from './assets/up.png';\r\nimport upCorner from './assets/upCorner.png';\r\nimport vertical from './assets/vertical.png';\r\nimport water from './assets/water.png';\r\nimport waterUp from './assets/waterUp.png';\r\nimport asset from './nature.png';\r\n\r\nconst defaultPerspective = 10;\r\nconst size = 74;\r\nconst corniceHeight = 46;\r\nconst waterHeight = 46;\r\n\r\nconst getAsset = asset => `url(${asset})`;\r\n\r\nconst mirror = \"180deg\";\r\n\r\n/* Углы */\r\n\r\nconst bgs = {\r\n  plate: { width: 36, height: 38, bgx: -514, bgy: -39 },\r\n  pointer: { width: 36, height: 38, bgx: -567, bgy: -39 },\r\n  mashroomOrange: { width: 29, height: 23, bgx: -649, bgy: -53 },\r\n  mashroomPink: { width: 29, height: 23, bgx: -616, bgy: -53 },\r\n  stump: { width: 76, height: 25, bgx: -696, bgy: -68 },\r\n  trees: {\r\n    big: { width: 167, height: 182, bgx: -448, bgy: -91 },\r\n    small: { width: 167, height: 165, bgx: -620, bgy: -107 }\r\n  },\r\n  bush: {\r\n    big: {\r\n      green: { width: 82, height: 38, bgx: -479, bgy: -301 },\r\n      yellow: { width: 82, height: 38, bgx: -566, bgy: -301 }\r\n    },\r\n    small: {\r\n      green: { width: 42, height: 38, bgx: -672, bgy: -307 },\r\n      yellow: { width: 42, height: 38, bgx: -726, bgy: -301 }\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst getItem = (left, top, props, perspective, middle) => {\r\n\r\n  return ({\r\n    ...props,\r\n    left: left,\r\n    top: top,\r\n    asset,\r\n    perspective: perspective || defaultPerspective\r\n  })\r\n};\r\n\r\nexport default {\r\n  blockSize: size,\r\n  waterHeight,\r\n  corniceHeight,\r\n  statics: {\r\n    \r\n    ground: {\r\n\r\n      inside: (left, top, width, height) => ({\r\n        left, top,\r\n        width, height,\r\n        asset: getAsset(middle)\r\n      }),\r\n\r\n      upper: {\r\n\r\n        left: (left, top) => ({\r\n          left, top, \r\n          width: size, \r\n          height: size, \r\n          asset: getAsset(upCorner),\r\n          bgy: 1,\r\n        }),\r\n\r\n        middle: (left, top, width) => ({\r\n          left, top, \r\n          width, height: size, \r\n          asset: getAsset(up),\r\n          bgy: 1,\r\n        }),\r\n\r\n        right: (left, top) => ({\r\n          left, top, \r\n          width: size, height: size, \r\n          asset: getAsset(upCorner), \r\n          rotateY: mirror, \r\n          bgy: 1,\r\n        }), \r\n        leftCorner: (left, top) => ({\r\n          left, top, \r\n          width: size, height: size, \r\n          asset: getAsset(corner), \r\n          }),\r\n\r\n        rightCorner: (left, top) => ({\r\n          left, top, \r\n          width: size, height: size, \r\n          asset: getAsset(corner), \r\n          rotateY: mirror\r\n        }), \r\n\r\n      },\r\n\r\n      vertical: {\r\n\r\n        left: (left, top, height) => ({\r\n          left, top,\r\n          width: size, height,\r\n          asset: getAsset(vertical),          \r\n        }),\r\n\r\n        right: (left, top, height) => ({\r\n          left, top,\r\n          width: size, height,\r\n          asset: getAsset(vertical),\r\n          rotateY: mirror \r\n        }),  \r\n\r\n      },\r\n\r\n      down: {\r\n\r\n        left: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(downCorner)\r\n        }),\r\n\r\n        middle: (left, top, width) => ({\r\n          left, top,\r\n          width, height: size,\r\n          asset: getAsset(down)\r\n        }),\r\n\r\n        right: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(downCorner),\r\n          rotateY: mirror\r\n        }), \r\n\r\n      },\r\n\r\n      cornice: {\r\n        left: (left, top) => ({\r\n          left, top,\r\n          width: size, height: corniceHeight,\r\n          asset: getAsset(corniceCorner)\r\n        }),\r\n\r\n        middle: (left, top, width) => ({\r\n          left, top,\r\n          width, height: corniceHeight,\r\n          asset: getAsset(cornice),\r\n        }),\r\n\r\n        right: (left, top) => ({\r\n          left, top,\r\n          width: size, height: corniceHeight,\r\n          asset: getAsset(corniceCorner),\r\n          rotateY: mirror\r\n        }),\r\n\r\n      },\r\n\r\n    },\r\n\r\n    water: {\r\n\r\n      up: (left, top, w) => ({\r\n        left, top,\r\n        width: w, height: waterHeight, \r\n        asset: getAsset(waterUp),\r\n      }),\r\n\r\n      inside: (left, top, width, height) => ({\r\n        left, top,\r\n        width: width, height: height, \r\n        asset: getAsset(water),\r\n      }),\r\n\r\n    },\r\n  },\r\n\r\n  backgrounds: {\r\n    plate: (left, top, perspective) => getItem(left, top, bgs.plate, perspective),\r\n    pointer: (left, top, perspective) => getItem(left, top, bgs.pointer, perspective),\r\n    mashrooms: {\r\n      orange: (left, top, perspective) => getItem(left, top, bgs.mashroomOrange, perspective),\r\n      pink: (left, top, perspective) => getItem(left, top, bgs.mashroomPink, perspective),\r\n    },\r\n    stump: (left, top, perspective) => getItem(left, top, bgs.stump, perspective),\r\n    trees: {\r\n      big: (left, top, perspective) => getItem(left, top, bgs.trees.big, perspective),\r\n      small: (left, top, perspective) => getItem(left, top, bgs.trees.small, perspective),\r\n    },\r\n    bush: {\r\n      big: {\r\n        green: (left, top, perspective) => getItem(left, top, bgs.bush.big.green, perspective),\r\n        yellow: (left, top, perspective) => getItem(left, top, bgs.bush.big.yellow, perspective),\r\n      },\r\n      small: {\r\n        green: (left, top, perspective) => getItem(left, top, bgs.bush.small.green, perspective),\r\n        yellow: (left, top, perspective) => getItem(left, top, bgs.bush.small.yellow, perspective),\r\n      }\r\n    }\r\n  }\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Elements\\Element.js",["407","408"],"import { zip } from 'lodash';\r\nimport Matter from 'matter-js';\r\nimport Renderer from './Element.renderer';\r\n\r\nclass Element {\r\n  constructor({\r\n    asset, \r\n    left, top, \r\n    width, height, \r\n    rotateX, rotateY,\r\n    bgx, bgy,\r\n    zIndex\r\n  }) {\r\n    this.height = height;\r\n    this.width = width;\r\n    this.left = left;\r\n    this.top = top;\r\n    this.asset = asset;\r\n    this.rotateX = rotateX;\r\n    this.rotateY = rotateY;\r\n    this.bgx = bgx || 0;\r\n    this.bgy = bgy || 0;\r\n    this.renderer = Renderer;\r\n    this.zIndex = zIndex;\r\n    if (!this.top) {\r\n      console.log('this.top')\r\n      console.log(this);\r\n    }\r\n  };\r\n};\r\n\r\nexport default Element;\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Effects\\Bang\\Bang.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Effects\\Effect.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\1lvl\\farm\\farm.js",["409"],"import background from './assets/background.png';\r\nimport hills from './assets/hills.png';\r\n\r\nconst defaultPerspective = 10;\r\n\r\n\r\nconst asset = `url(${background})`;\r\n\r\nconst Background = {\r\n  arc1: { width: 242, height: 95, bgx: -47, bgy: -46, perspective: 10  },\r\n  leftHalfArc1: { width: 121, height: 95, bgx: -47, bgy: -46, perspective: 10  },\r\n  rightHalfArc1: { width: 121, height: 95, bgx: -159, bgy: -46, perspective: 10  },\r\n  middleArc1: { width: 199, height: 95, bgx: -447, bgy: -46, perspective: 10  },\r\n  tower: {\r\n    small: { width: 114, height: 221, bgx: -950, bgy: -46, perspective: 10  },\r\n    medium: { width: 114, height: 292, bgx: -1110, bgy: -46, perspective: 10  },\r\n    big: { width: 114, height: 370, bgx: -1276, bgy: -46, perspective: 10 }\r\n  },\r\n  scultpure: { width: 188, height: 151, bgx: -304, bgy: -174, perspective: 10  },\r\n  stackOfHay: { width: 77, height: 36, bgx: -834, bgy: -234, perspective: 25  },\r\n  houses: {\r\n    square: { width: 205, height: 157, bgx: -45, bgy: -352, perspective: 10 },\r\n    noWalls: { width: 266, height: 146, bgx: -34, bgy: -612, perspective: 10  },\r\n  },\r\n  hills: { width: 1900, height: 700, bgx: 0, bgy: 0, perspective: 7  },\r\n}\r\n\r\nconst getItem = (left, top, props, perspective) => {\r\n\r\n  return ({\r\n    ...props,\r\n    left: left,\r\n    top: top - props.height,\r\n    asset,\r\n    perspective: perspective || defaultPerspective\r\n  })\r\n}\r\n\r\nexport default {\r\n  arc: {\r\n    whole: (left, top, perspective) => getItem(left, top, Background.arc1, perspective),\r\n    leftPart: (left, top, perspective) => getItem(left, top, Background.leftHalfArc1, perspective),\r\n    rigthPart: (left, top, perspective) => getItem(left, top, Background.rightHalfArc1, perspective),\r\n    middlePart: (left, top, perspective) => getItem(left, top, Background.middleArc1, perspective),\r\n  },\r\n  towers: {\r\n    small: (left, top, perspective) => getItem(left, top, Background.tower.small, perspective),\r\n    medium: (left, top, perspective) => getItem(left, top, Background.tower.medium, perspective),\r\n    big: (left, top, perspective) => getItem(left, top, Background.tower.big, perspective),\r\n  },\r\n  scultpure: (left, top, perspective) => getItem(left, top, Background.scultpure, perspective),\r\n  stackOfHay: (left, top, perspective) => getItem(left, top, Background.stackOfHay, perspective),\r\n  houses: {\r\n    square: (left, top, perspective) => getItem(left, top, Background.houses.square, perspective),\r\n    noWalls: (left, top, perspective) => getItem(left, top, Background.houses.noWalls, perspective),\r\n  },\r\n  hills: {\r\n    height: 680,\r\n    element: (left, top, width ) => ({left, top, width, height: 680, asset: `url(${hills})`, perspective: 20, zIndex: 0})\r\n  }\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\systems\\Effects.js",["410"],"import Matter from 'matter-js';\r\nimport getFromEntities from '../lib/getFromEnitites';\r\n\r\n\r\nconst Effects = (entities, screen) => {\r\n\r\n  const effects = getFromEntities(entities, \"effect\")\r\n  effects.forEach(effect => effect.animate());\r\n\r\n  return entities\r\n}\r\n\r\nexport default Effects","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\menu\\Menu.js",["411","412"],"import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport styles from \"./Menu.module.css\";\r\nimport contraLogo from \"./../../assets/sprite-sheets/logo-contra.jpg\";\r\nimport MenuControls from \"./Controls/MenuControls\";\r\nimport MenuSettings from \"./Settings/MenuSettings\";\r\nimport DeadMenu from \"./Dead/DeadMenu\";\r\nimport stage1 from \"./../../assets/audio/Stage1.mp3\";\r\nimport pauseMusic from \"./../../assets/audio/Pause.mp3\";\r\nimport gameOverMusic from \"./../../assets/audio/GameOver.mp3\";\r\n\r\nexport default class Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.pauseClickHandler = this.pauseClickHandler.bind(this);\r\n    this.resumeClickHandler = this.resumeClickHandler.bind(this);\r\n    this.restartClickHandler = this.restartClickHandler.bind(this);\r\n    this.menuControlsHandler = this.menuControlsHandler.bind(this);\r\n    this.menuSettingsHandler = this.menuSettingsHandler.bind(this);\r\n    this.dead = this.dead.bind(this);\r\n    this.startGame = this.startGame.bind(this);\r\n    this.menu = React.createRef();\r\n    this.input = React.createRef();\r\n    this.music = new Audio(stage1);\r\n    this.music.loop = true;\r\n\r\n    this.state = {\r\n      isControlsActive: false,\r\n      isSettingsActive: false,\r\n      isDead: false,\r\n      isStarted: false,\r\n    };\r\n    this.entity = null;\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    window.addEventListener(\"keyup\", (e) => {\r\n      if (e.key === \"Escape\") {\r\n        if (!this.props.game.state.showMenu) {\r\n          this.pauseClickHandler();\r\n        } else {\r\n          this.resumeClickHandler();\r\n          this.setState({\r\n            isControlsActive: false,\r\n            isSettingsActive: false,\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  dead() {\r\n    let gameOver = new Audio(gameOverMusic);\r\n    setTimeout(() => {\r\n      gameOver.play();\r\n    }, 500);\r\n\r\n    this.setState({\r\n      isDead: true,\r\n    });\r\n    this.pauseClickHandler();\r\n  }\r\n\r\n  menuControlsHandler() {\r\n    if (this.state.isControlsActive) {\r\n      this.setState({\r\n        isControlsActive: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isControlsActive: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  menuSettingsHandler() {\r\n    if (this.state.isSettingsActive) {\r\n      this.setState({\r\n        isSettingsActive: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isSettingsActive: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  pauseClickHandler() {\r\n    this.props.game.gameEngine.stop();\r\n    this.menu.current.classList.remove(\"hidden\");\r\n    this.props.game.setState({\r\n      isStarted: true,\r\n      showMenu: true,\r\n    });\r\n    this.music.pause();\r\n    let tes = new Audio(pauseMusic);\r\n    if (!this.state.isDead) {\r\n      tes.play();\r\n    }\r\n  }\r\n  resumeClickHandler() {\r\n    this.props.game.gameEngine.start();\r\n\r\n    this.props.game.setState({\r\n      showMenu: false,\r\n    });\r\n    this.menu.current.classList.add(\"hidden\");\r\n    this.render();\r\n    this.music.play();\r\n  }\r\n\r\n  restartClickHandler() {}\r\n\r\n  startGame() {\r\n    let name = this.input.current.value;\r\n    this.props.game.setState({\r\n      playerName: name,\r\n      showMenu: true,\r\n    });\r\n    this.music.play();\r\n    this.resumeClickHandler();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.menu} className={styles.menu}>\r\n        {this.state.isControlsActive && (\r\n          <MenuControls callback={this.menuControlsHandler} />\r\n        )}\r\n\r\n        {this.state.isSettingsActive && (\r\n          <MenuSettings callback={this.menuSettingsHandler} />\r\n        )}\r\n        {this.state.isDead && <DeadMenu callback={this.restartClickHandler} />}\r\n\r\n        {!this.props.game.state.isStarted && (\r\n          <div>\r\n            <form className={styles.start}>\r\n              <img\r\n                className={styles.logo}\r\n                src={contraLogo}\r\n                alt=\"Contra-logo\"\r\n              ></img>\r\n              <input\r\n                className={styles.textinput}\r\n                ref={this.input}\r\n                placeholder=\"Enter Your Name\"\r\n              ></input>\r\n              <button className={styles.gameButton} onClick={this.startGame}>\r\n                Start Game\r\n              </button>\r\n              <button\r\n                className={styles.gameButton}\r\n                onClick={this.menuControlsHandler}\r\n              >\r\n                Controls\r\n              </button>\r\n              <button\r\n                className={styles.gameButton}\r\n                onClick={this.menuSettingsHandler}\r\n              >\r\n                Settings\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {this.props.game.state.isStarted && (\r\n          <div className={styles.column}>\r\n            <p className={styles.logo}>\r\n              PAUSED {this.props.game.state.playerName}\r\n            </p>\r\n\r\n            <button\r\n              className={styles.gameButton}\r\n              onClick={this.resumeClickHandler}\r\n            >\r\n              Resume\r\n            </button>\r\n            <button\r\n              className={styles.gameButton}\r\n              onClick={this.restartClickHandler}\r\n            >\r\n              Save Game\r\n            </button>\r\n            <button\r\n              className={styles.gameButton}\r\n              onClick={this.restartClickHandler}\r\n            >\r\n              Load Game\r\n            </button>\r\n            <button\r\n              className={styles.gameButton}\r\n              onClick={this.menuControlsHandler}\r\n            >\r\n              Controls\r\n            </button>\r\n            <button\r\n              className={styles.gameButton}\r\n              onClick={this.menuSettingsHandler}\r\n            >\r\n              Settings\r\n            </button>\r\n            <button\r\n              className={styles.gameButton}\r\n              onClick={this.restartClickHandler}\r\n            >\r\n              Restart\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\matter\\beforeUpdate.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\lib\\getFromEnitites.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\lib\\defineUnit.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\menu\\Controls\\MenuControls.js",["413"],"import React, { Component } from \"react\";\r\nimport styles from \"./MenuControls.module.css\";\r\n\r\nexport default class MenuSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <p>D - Fire</p>\r\n        <p>Space - Jump</p>\r\n        <p>→←↑↓ - Move</p>\r\n        <button className={styles.gameButton} onClick={this.props.callback}>\r\n          Back\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Effects\\Effect.creator.js",["414"],"import Bang from './Bang/Bang';\r\nimport BulletHit from './BulletHit/BulletHit';\r\n\r\nexport default {\r\n  bang: ({centerX, centerY, factory, key, idx}) => new Bang({centerX, centerY, factory, key, idx}),\r\n  bulletHit: ({centerX, centerY, factory, idx}) => new BulletHit({centerX, centerY, factory, idx})\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\menu\\Settings\\MenuSettings.js",["415"],"import React, { Component } from \"react\";\r\nimport styles from \"./MenuSettings.module.css\";\r\n\r\nexport default class MenuSettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <p>Sound on/off</p>\r\n        <button className={styles.gameButton} onClick={this.props.callback}>\r\n          Back\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\menu\\Dead\\DeadMenu.js",["416"],"import React, { Component } from \"react\";\r\nimport styles from \"./DeadMenu.module.css\";\r\nimport contraLogo from \"./../../../assets/sprite-sheets/Dead.png\";\r\n\r\nexport default class DeadMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        You are Dead !!\r\n        <img className={styles.logo} src={contraLogo} alt=\"Contra-logo\"></img>\r\n        <button className={styles.gameButton}>Restart</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Effects\\BulletHit\\BulletHit.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Elements\\Background.js",["417"],"import Element from './Element';\r\nimport Matter from 'matter-js';\r\n\r\nexport default class BgElement extends Element {\r\n  constructor(props) {\r\n    super(props);\r\n    this.body = Matter.Bodies.\r\n    rectangle(props.left + props.width / 2, props.top + props.height / 2, \r\n              props.width, props.height, \r\n              { isSensor: true, isStatic: true });\r\n    this.perspective = props.perspective;\r\n    this.left = props.left;\r\n    this.top = props.top;\r\n    this.bgx = props.bgx;\r\n    this.bgy = props.bgy;\r\n    this.type = \"background\";\r\n  }\r\n\r\n  move = left => {\r\n    Matter.Body.setPosition(this.body, { x: this.left + this.width / 2 + left / this.perspective , y: this.body.position.y})\r\n  };\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Elements\\Static.js",["418"],"import Element from './Element';\r\nimport Matter from 'matter-js';\r\n\r\nexport default class StaticElement extends Element {\r\n  constructor(props) {\r\n    super(props);\r\n    this.body = Matter.Bodies.\r\n                rectangle(props.left + props.width / 2, props.top + props.height / 2, \r\n                          props.width, props.height, \r\n                          { isStatic: true, density: 10 ** 10 });\r\n    this.type = \"static\";\r\n    this.element = props.element;\r\n    this.zIndex = 5;\r\n  };\r\n  \r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Elements\\Water.js",["419"],"import Static from './Static';\r\nimport Matter from 'matter-js';\r\n\r\nexport default class Water extends Static {\r\n  constructor(props) {\r\n    console.log(props);\r\n    super(props);\r\n    this.body = Matter.Bodies.\r\n                rectangle(props.left + props.width / 2, props.top + props.height / 2, \r\n                          props.width, props.height, \r\n                          { isSensor: true, isStatic: true, density: 0.5 });\r\n    this.type = \"static\";\r\n    this.zIndex = 1;\r\n    this.name = \"water\";\r\n    this.isVisible = true;\r\n    console.log(this);\r\n  }\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\lib\\degToRad.js",[],["420","421"],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Effects\\Effect.renderer.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Elements\\Element.renderer.js",["422"],"import React from 'react'\r\n\r\nlet once = true;\r\n\r\nexport default function Static(props) {\r\n\r\n  const {\r\n    width,\r\n    height,\r\n    bgx,\r\n    bgy,\r\n    isVisible,\r\n    rotateX,\r\n    rotateY,\r\n    body,\r\n    asset,\r\n    zIndex\r\n  } = props;\r\n\r\n  const getTranform = () => {\r\n    if (rotateX) {\r\n      return `rotateX(${rotateX})`\r\n    } else if (rotateY) {\r\n      return `rotateY(${rotateY})`\r\n    }\r\n  }\r\n\r\n  const left = body.position.x - width / 2;\r\n  const top = body.position.y - height / 2;\r\n\r\n  return isVisible ? (\r\n    <div style={{\r\n      position: \"absolute\",\r\n      zIndex: zIndex,\r\n      top: top,\r\n      left: left,\r\n      width: width,\r\n      height: height,\r\n      backgroundImage: asset,\r\n      backgroundPositionY: bgy,\r\n      backgroundPositionX: bgx,\r\n      backgroundRepeat: \"repeat\",\r\n      transform: getTranform(),\r\n\r\n    }} />\r\n  ) : null;\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Player.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Golem\\Golem.js",["423","424"],"import Enemy from '../Enemy';\r\nimport animations from './Golem.animations';\r\nimport background from './Golem.png';\r\nimport Matter from 'matter-js';\r\nimport Weapon from '../../../Weapon/Weapon';\r\nimport Bang from '../../../Effects/Bang/Bang';\r\n\r\nconst asset = `url(${background})`;\r\n\r\nexport default class Golem extends Enemy {\r\n  constructor({\r\n    left, top, factory, angle, idx,\r\n  }) {\r\n    super({left, top, \r\n      factory, world: factory.game.entities.world, \r\n      width: 60, height: 65, \r\n      defaultAnimation: animations.idle,\r\n      animations,\r\n      angle, \r\n      health: 200,\r\n      speed: 3,\r\n      matterProps: { density: Infinity, mass: 200 },\r\n      asset,\r\n      scale: 0.6\r\n    });\r\n    this.unit = \"golem\";\r\n    this.weapon = new Weapon(this);\r\n  }\r\n\r\n  AI = (person) => {\r\n    if (Math.abs(person.body.position.x - this.body.position.x) < 200) {\r\n      this.fire()\r\n    } else {\r\n      this.moveLeft()\r\n    }\r\n    this.animate();\r\n  };\r\n\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Bird\\Bird.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Boss1\\Boss1.js",["425"],"import Enemy from '../Enemy';\r\nimport Matter from 'matter-js';\r\nimport animations from './Boss1.animations';\r\nimport background from './Boss.png';\r\n\r\nconst asset = `url(${background})`;\r\n\r\nexport default class Boss1 extends Enemy {\r\n  constructor({\r\n    left, top, factory, angle, idx,\r\n  }) {\r\n    super({\r\n      left, top,\r\n      factory, world: factory.game.entities.world,\r\n      width: 60, height: 65,\r\n      defaultAnimation: animations.idle,\r\n      animations,\r\n      angle,\r\n      health: 200,\r\n      speed: 3,\r\n      matterProps: { density: Infinity, mass: 200, isStatic: true },\r\n      asset,\r\n      scale: 0.6\r\n    });\r\n    this.unit = \"boss\";\r\n    this.weapon = null;\r\n  };\r\n\r\n  AI = (person) => {\r\n    this.moveLeft();\r\n    this.animate();\r\n  }\r\n\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Unit.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Enemy.js",["426"],"import Matter from 'matter-js';\r\nimport Unit from '../Unit';\r\n\r\nclass Enemy extends Unit {\r\n  constructor({\r\n    left, top, \r\n    width, height, \r\n    factory, world,\r\n    defaultAnimation,\r\n    animations,\r\n    angle,\r\n    health, speed,\r\n    matterProps,\r\n    asset, scale }) {\r\n    super({\r\n      left, top, width, height,\r\n      factory, world,\r\n      defaultAnimation,\r\n      animations,\r\n      angle,\r\n      health, speed,\r\n      matterProps,\r\n      asset,\r\n      scale\r\n    });\r\n    this.type = \"enemy\";\r\n    this.healthbar = true;\r\n  };\r\n\r\n  runDieAnimation = () => {\r\n    this.factory.addBang({centerX: this.body.position.x, centerY: this.body.position.y});\r\n    this.factory.removeUnit(this);\r\n  };\r\n\r\n  hitReaction = () => {\r\n\r\n  }\r\n\r\n};\r\n\r\nexport default Enemy;\r\n\r\n\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Golem\\Golem.animations.js",["427","428"],"import png from './Golem.png';\r\n\r\nconst asset = `url(${png})`;\r\n\r\nconst idle = [{\r\n  slides: [\r\n    { x: -25, y: -473, w: 113, h: 130, duration: 6 },\r\n    { x: -144, y: -473, w: 113, h: 130, duration: 6 },\r\n    { x: -266, y: -473, w: 113, h: 130, duration: 6 },\r\n    { x: -388, y: -473, w: 113, h: 130, duration: 6 },\r\n    { x: -523, y: -473, w: 113, h: 130, duration: 6 },\r\n    { x: -650, y: -473, w: 113, h: 130, duration: 6 },\r\n    { x: -765, y: -473, w: 113, h: 130, duration: 6 },\r\n    { x: -870, y: -473, w: 113, h: 130, duration: 6 },\r\n    { x: -978, y: -473, w: 93, h: 130, duration: 6 },\r\n    { x: -1066, y: -473, w: 113, h: 130, duration: 6 },\r\n    { x: -1176, y: -473, w: 113, h: 130, duration: 6 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}]\r\n\r\nconst move = [{\r\n  slides: [\r\n    { x: -7, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -49, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -94, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -139, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -184, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -229, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -274, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -319, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -364, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -409, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -464, y: -52, w: 45, h: 45, duration: 6 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}];\r\n\r\nconst jump = {\r\n  slides: [\r\n    { x: -53, y: -117, w: 50, h: 50, duration: 4 },\r\n    { x: -100, y: -117, w: 45, h: 51, duration: 5 },\r\n    { x: -141, y: -117, w: 45, h: 51, duration: 6 },\r\n    { x: -182, y: -117, w: 42, h: 51, duration: 5 },\r\n    { x: -222, y: -115, w: 42, h: 57, duration: 5 },\r\n    { x: -264, y: -110, w: 41, h: 78, duration: 5 },\r\n    { x: -303, y: -100, w: 41, h: 78, duration: 4 },\r\n  ],\r\n  isCycle: false,\r\n  asset\r\n};\r\n\r\nconst fall = {\r\n  slides: [\r\n    { x: -264, y: -100, w: 41, h: 78, duration: 5 },\r\n    { x: -303, y: -100, w: 41, h: 78, duration: 5 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n};\r\n\r\nconst jumpAnimattion = [\r\n  jump, fall\r\n]\r\n\r\nconst runAndFire = [\r\n  { x: -48, y: -148, w: 105, h: 117, duration: 6 },\r\n  { x: -165, y: -148, w: 105, h: 117, duration: 6 },\r\n  { x: -293, y: -148, w: 105, h: 117, duration: 6 },\r\n  { x: -412, y: -148, w: 105, h: 117, duration: 6 },\r\n  { x: -517, y: -148, w: 105, h: 117, duration: 6 },\r\n  { x: -634, y: -148, w: 105, h: 117, duration: 6 },\r\n  { x: -754, y: -148, w: 105, h: 117, duration: 6 },\r\n]\r\n\r\nconst idleFire = [{\r\n  slides: [\r\n    { x: -48, y: -148, w: 105, h: 130, duration: 4 },\r\n    { x: -165, y: -148, w: 105, h: 130, duration: 4 },\r\n    { x: -293, y: -148, w: 105, h: 130, duration: 4 },\r\n    { x: -412, y: -148, w: 105, h: 130, duration: 4 },\r\n    { x: -517, y: -148, w: 105, h: 130, duration: 4 },\r\n    { x: -634, y: -148, w: 105, h: 130, duration: 4 },\r\n    { x: -754, y: -148, w: 105, h: 130, duration: 4 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}];\r\n\r\nexport default {\r\n  idle, move: idle, jump, fall, jumpAnimattion, runAndFire, idleFire\r\n};\r\n\r\n\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Boss1\\Boss1.animations.js",["429"],"const idle = [{\r\n  slides: [\r\n    { x: 0, y: 0, w: 225, h: 146, duration: 6 },\r\n    { x: -225, y: 0, w: 225, h: 146, duration: 6 },\r\n    { x: -450, y: 0, w: 225, h: 146, duration: 6 },\r\n    { x: -675, y: 0, w: 225, h: 146, duration: 6 },\r\n    { x: -900, y: 0, w: 225, h: 146, duration: 6 },\r\n    { x: 0, y: -146, w: 225, h: 146, duration: 6 },\r\n    { x: -225, y: -146, w: 225, h: 146, duration: 6 },\r\n    { x: -450, y: -146, w: 225, h: 146, duration: 6 },\r\n    { x: -675, y: -146, w: 225, h: 146, duration: 6 },\r\n    { x: -900, y: -146, w: 225, h: 146, duration: 6 },\r\n    { x: 0, y: -292, w: 225, h: 146, duration: 6 },\r\n    { x: -225, y: -292, w: 225, h: 146, duration: 6 },\r\n    { x: -450, y: -292, w: 225, h: 146, duration: 6 },\r\n    { x: -675, y: -292, w: 225, h: 146, duration: 6 },\r\n\r\n    { x: -225, y: -146, w: 225, h: 146, duration: 6 },\r\n    { x: 0, y: -454, w: 225, h: 146, duration: 6 },\r\n    { x: -225, y: -454, w: 225, h: 146, duration: 6 },\r\n    { x: -450, y: -454, w: 225, h: 146, duration: 6 },\r\n  ],\r\n  isCycle: true\r\n}]\r\n\r\nconst move = [{\r\n  slides: [\r\n    { x: -7, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -49, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -94, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -139, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -184, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -229, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -274, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -319, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -364, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -409, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -464, y: -52, w: 45, h: 45, duration: 6 },\r\n  ],\r\n  isCycle: true\r\n}];\r\n\r\nconst jump = {\r\n  slides: [\r\n    { x: -53, y: -117, w: 50, h: 50, duration: 4 },\r\n    { x: -100, y: -117, w: 45, h: 51, duration: 5 },\r\n    { x: -141, y: -117, w: 45, h: 51, duration: 6 },\r\n    { x: -182, y: -117, w: 42, h: 51, duration: 5 },\r\n    { x: -222, y: -115, w: 42, h: 57, duration: 5 },\r\n    { x: -264, y: -110, w: 41, h: 78, duration: 5 },\r\n    { x: -303, y: -100, w: 41, h: 78, duration: 4 },\r\n  ],\r\n  isCycle: false\r\n};\r\n\r\nconst fall = {\r\n  slides: [\r\n    { x: -264, y: -100, w: 41, h: 78, duration: 5 },\r\n    { x: -303, y: -100, w: 41, h: 78, duration: 5 },\r\n  ],\r\n  isCycle: true\r\n};\r\n\r\nconst jumpAnimation = [\r\n  jump, fall\r\n]\r\n\r\nconst runAndFire = [\r\n  { x: -1, y: -232, duration: 6 },\r\n  { x: -54, y: -232, duration: 6 },\r\n  { x: -107, y: -232, duration: 6 },\r\n  { x: -159, y: -232, duration: 6 },\r\n  { x: -212, y: -232, duration: 6 },\r\n  { x: -265, y: -232, duration: 6 },\r\n  { x: -319, y: -232, duration: 6 },\r\n  { x: -370, y: -232, duration: 6 },\r\n  { x: -418, y: -232, duration: 6 },\r\n  { x: -467, y: -232, duration: 6 },\r\n]\r\n\r\nconst idleFire = [{\r\n  slides: [\r\n    { x: -36, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -78, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -128, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -169, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -220, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -266, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -316, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -375, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -433, y: -410, w: 45, h: 45, duration: 4 },\r\n  ],\r\n  isCycle: false\r\n}];\r\n\r\n\r\nconst animations = {\r\n  idle, move: idle, jump, fall, jumpAnimation, runAndFire, idleFire\r\n};\r\n\r\nexport default animations;\r\n\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Bird\\Bird.animations.js",["430"],"import png from './Bird.png';\r\n\r\nconst asset = `url(${png})`;\r\n\r\nconst idle = [{\r\n  slides: [\r\n    { x: -0, y: -0, w: 182, h: 170, duration: 6 },\r\n    { x: -182, y: -0, w: 182, h: 170, duration: 6 },\r\n    { x: -364, y: -0, w: 182, h: 170, duration: 6 },\r\n    { x: -546, y: -0, w: 182, h: 170, duration: 6 },\r\n    { x: -728, y: -0, w: 182, h: 170, duration: 6 },\r\n    { x: -0, y: -170, w: 182, h: 170, duration: 6 },\r\n    { x: -182, y: -170, w: 182, h: 170, duration: 6 },\r\n    { x: -364, y: -170, w: 182, h: 170, duration: 6 },\r\n    { x: -546, y: -170, w: 182, h: 170, duration: 6 },\r\n    { x: -728, y: -170, w: 182, h: 170, duration: 6 },\r\n    { x: -0, y: -340, w: 182, h: 170, duration: 6 },\r\n    { x: -182, y: -340, w: 182, h: 170, duration: 6 },\r\n    { x: -364, y: -340, w: 182, h: 170, duration: 6 },\r\n    { x: -546, y: -340, w: 182, h: 170, duration: 6 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}]\r\n\r\nconst move = [{\r\n  slides: [\r\n    { x: -7, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -49, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -94, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -139, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -184, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -229, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -274, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -319, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -364, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -409, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -464, y: -52, w: 45, h: 45, duration: 6 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}];\r\n\r\nconst jump = {\r\n  slides: [\r\n    { x: -53, y: -117, w: 50, h: 50, duration: 4 },\r\n    { x: -100, y: -117, w: 45, h: 51, duration: 5 },\r\n    { x: -141, y: -117, w: 45, h: 51, duration: 6 },\r\n    { x: -182, y: -117, w: 42, h: 51, duration: 5 },\r\n    { x: -222, y: -115, w: 42, h: 57, duration: 5 },\r\n    { x: -264, y: -110, w: 41, h: 78, duration: 5 },\r\n    { x: -303, y: -100, w: 41, h: 78, duration: 4 },\r\n  ],\r\n  isCycle: false,\r\n  asset\r\n};\r\n\r\nconst fall = {\r\n  slides: [\r\n    { x: -264, y: -100, w: 41, h: 78, duration: 5 },\r\n    { x: -303, y: -100, w: 41, h: 78, duration: 5 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n};\r\n\r\nconst jumpAnimation = [\r\n  jump, fall\r\n]\r\n\r\nconst runAndFire = [\r\n  { x: -1, y: -232, duration: 6 },\r\n  { x: -54, y: -232, duration: 6 },\r\n  { x: -107, y: -232, duration: 6 },\r\n  { x: -159, y: -232, duration: 6 },\r\n  { x: -212, y: -232, duration: 6 },\r\n  { x: -265, y: -232, duration: 6 },\r\n  { x: -319, y: -232, duration: 6 },\r\n  { x: -370, y: -232, duration: 6 },\r\n  { x: -418, y: -232, duration: 6 },\r\n  { x: -467, y: -232, duration: 6 },\r\n]\r\n\r\nconst idleFire = [{\r\n  slides: [\r\n    { x: -36, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -78, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -128, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -169, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -220, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -266, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -316, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -375, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -433, y: -410, w: 45, h: 45, duration: 4 },\r\n  ],\r\n  isCycle: false,\r\n  asset\r\n}];\r\n\r\n\r\nconst animations = {\r\n  idle, move: idle, jump, fall, jumpAnimation, runAndFire, idleFire\r\n};\r\n\r\nexport default animations;\r\n\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\constraints\\colides.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\index.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Unit.renderer.js",["431"],"import React from 'react';\r\nimport Indicator from './Adds/Indicator/indicator';\r\nimport HealthBar from './Adds/healthbar';\r\n\r\nlet twice = 0;\r\n\r\nexport default function Unit(props) {\r\n\r\n  const left = props.body.position.x - props.width / 2;\r\n  const top = props.body.position.y - props.height / 2;\r\n\r\n  const chooseRotate = () => {\r\n    const rotate = props.angle >= 0 ? \"\" : \"rotateY(180deg)\";\r\n    const scale = props.scale ? ` scale(${props.scale})` : \"\";\r\n    return rotate + scale\r\n  };\r\n\r\n  return props.isVisible ? (\r\n    <div style={{\r\n      position: \"absolute\",\r\n      zIndex: props.zIndex,\r\n      top: top,\r\n      left: left,\r\n      width: props.width,\r\n      height: props.height,\r\n      backgroundImage: props.asset,\r\n      backgroundPositionX: props.bgx,\r\n      backgroundPositionY: props.bgy,\r\n      backgroundRepeat: props.repeat || \"repeat\",\r\n      transform: chooseRotate()\r\n    }}>\r\n      {props.indicator && <Indicator angle={props.angle}/>}\r\n      {props.healthbar && <HealthBar props={props} />}\r\n    </div>\r\n  ) : null;\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Unit.animation.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\quad.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\strike.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\stand_up.js",[],["432","433"],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\sit.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\run.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\run_and_fire.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\jump_and_strike.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\jump_and_fire.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\jump.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\jump_and_alt_fire.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\idle.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\idle_fire.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Adds\\healthbar.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\force_run.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Adds\\Indicator\\indicator.js",["434","435"],"import React from 'react';\r\nimport png from './indicator.png';\r\nconst asset = `url(${png})`;\r\n\r\nconst pickProps = angle => {\r\n  switch (angle) {\r\n    case 0: /* MoveRight */\r\n      return ({ left: 60, top: 8, rotate: \"0\"})\r\n    case -180: /* MoveLeft */\r\n      return ({ left: 60, top: 8, rotate: \"0\"})\r\n    case 315:  /* moveRightAndLookUp */\r\n      return ({ left: 55, top: -20, rotate: \"-45deg\"});\r\n    case 45:  /* moveRightAndLookDown */\r\n      return ({ left: 55, top: 40, rotate: \"45deg\"});\r\n    case -135: /* moveLeftAndLookUp */\r\n      return ({ left: 55, top: -20, rotate: \"-45deg\"});\r\n    case -225: /* moveLeftAndLookDown */\r\n      return ({ left: 55, top: 40, rotate: \"45deg\"});\r\n    case 270: /* rightlookUp */\r\n      return ({ left: 8, top: -45, rotate: \"-90deg\"});\r\n    case -90: /* leftLookUp */\r\n      return ({ left: 8, top: -45, rotate: \"-90deg\"});\r\n    case 90: /* rightLookDown */\r\n      return ({ left: 8, top: 60, rotate: \"90deg\"});\r\n    case -270: /* leftLookDown */\r\n      return ({ left: 8, top: 60, rotate: \"90deg\"});\r\n \r\n  }\r\n}\r\n\r\nexport default function Indicator ({angle}) {\r\n\r\n  const rad = Math.abs(angle * Math.PI / 180);\r\n\r\n  const { left, top, rotate } = pickProps(angle);\r\n\r\n  return (\r\n    <div className=\"indicator\" \r\n      style={{\r\n        position: \"absolute\",\r\n        width: 30,\r\n        height: 30,\r\n        left: left,\r\n        top: top,\r\n        backgroundImage: asset,\r\n        backgroundSize: \"cover\",\r\n        transform: `rotate(${rotate})` \r\n      }}\r\n      />\r\n  )\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\force_run_and_fire.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\force_jump.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\appear.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Animations\\fall.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Player\\Player.bullet.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Golem\\Golem.bullet.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\lib\\distanceProps.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Boss1\\Boss1.renderer.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Bullet\\Bullet.js",["436"],"import Matter from 'matter-js';\r\nimport Bullet from './Bullet.renderer';\r\n\r\nconst frames = [\r\n  { bgx: -40, duration: 10 },\r\n  { bgx: -80, duration: 15 },\r\n  { bgx: -120, duration: 15 },\r\n  { bgx: -160, duration: 15 },\r\n  { bgx: -200, duration: 15 },\r\n  { bgx: -240, duration: 15 },\r\n  { bgx: -280, duration: 15 },\r\n];\r\n\r\nclass _Bullet {\r\n  constructor({ x, y, speed, angle, factory, damage, asset, bgx, bgy, frames, size, matterProps }) {\r\n    this.left = x;\r\n    this.top = y;\r\n    this.size = size;\r\n    this.left = x + (angle >= 0 ? 0 : - this.size[0]);\r\n    this.top = y;\r\n    this.backgroundPosition = [bgx, bgy];\r\n    this.angle = angle;\r\n    this.body = Matter.Bodies.rectangle(this.left, this.top, this.size[0], this.size[1], matterProps);\r\n    this.body.unit = this;\r\n    this.renderer = Bullet;\r\n    this.speed = speed;\r\n    this.animateIndex = 0;\r\n    this.distance = 0;\r\n    this.factory = factory;\r\n    this.type = \"bullet\";\r\n    this.damage = damage;\r\n    this.asset = asset;\r\n    this.animation = {\r\n      frameIdx: 0,\r\n      durationIdx: 0,\r\n      duration: 0,\r\n      isCycle: true\r\n    };\r\n    this.frames = frames;\r\n  }\r\n\r\n  animate = () => {\r\n    const frameIdx = this.animation.frameIdx;\r\n    const frame = this.frames[frameIdx];\r\n    this.size = [frame.w, frame.h];\r\n    this.animation.duration = frame.duration;\r\n    this.backgroundPosition = [frame.bgx, frame.bgy];\r\n    if (this.animation.durationIdx < this.animation.duration) {\r\n      this.animation.durationIdx += 1;\r\n    } else {\r\n      this.animation.frameIdx = this.frames[frameIdx + 1] ? frameIdx + 1 : frameIdx;\r\n      this.animation.durationIdx = 0;\r\n    }\r\n  };\r\n\r\n  move = () => {\r\n    const PI = 3.1416;\r\n    const rad = (this.angle * PI) / 180;\r\n    this.animate();\r\n    const vector = { x: this.speed * Math.cos(rad), y: this.speed * Math.sin(rad) };\r\n    Matter.Body.translate(this.body, vector);\r\n    this.distance += this.speed;\r\n\r\n    if (this.distance >= 500) {\r\n      this.factory.removeUnit(this);\r\n    }\r\n  };\r\n\r\n  hitTarget = () => {\r\n    /* пуля подпадает в цель => должна взорваться и исчезнуть из мира matter-js и из entities */\r\n    this.factory.addBulletHit({\r\n      centerX: this.body.position.x,\r\n      centerY: this.body.position.y\r\n    })\r\n    this.factory.deleteBullet(this);\r\n  }\r\n\r\n}\r\n\r\nexport default _Bullet;","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Bullet\\Bullet.renderer.js",["437"],"import React from 'react'\r\n\r\nlet once = false;\r\n\r\nexport default function Person(props) {\r\n\r\n  const [width, height] = props.size;\r\n  const left = props.body.position.x - width / 2;\r\n  const top = props.body.position.y - height / 2;\r\n  const [bgx, bgy] = props.backgroundPosition;\r\n  const asset = props.asset;\r\n\r\n  return (\r\n    <div style={{\r\n      position: \"absolute\",\r\n      zIndex: 10,\r\n      top: top,\r\n      left: left,\r\n      width: width,\r\n      height: height,\r\n      backgroundImage: asset,\r\n      backgroundPositionX: bgx,\r\n      backgroundPositionY: bgy,\r\n      transform: `rotateY(180deg) scale(0.6)`\r\n    }} />\r\n  )\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\2lvl\\level2.js",["438","439","440","441"],"import Farm from './farm/farm';\r\nimport Nature from './nature/nature';\r\nimport StaticItem from '../../entities/Elements/Static';\r\nimport BgItem from '../../entities/Elements/Background';\r\nimport Player from '../../entities/Units/Player/Player';\r\nimport WaterItem from '../../entities/Elements/Water';\r\n\r\nconst blockSize = Nature.blockSize;\r\nconst waterHeight = Nature.waterHeight;\r\nconst corniceHeight = Nature.corniceHeight;\r\nconst levelWidth = blockSize * 100;\r\nconst levelHeight = blockSize * 30;\r\nconst height = levelHeight;\r\nconst floor = height - blockSize * 5;\r\n\r\n\r\nconst backgrounds = [\r\n\tFarm.hills.element(0, height - blockSize * 3 - Farm.hills.height, levelWidth)\r\n];\r\n\r\nconst loadBackgrounds = factory => {\r\n\tbackgrounds.forEach((el, idx) => {\r\n\t\tconst entity = new BgItem({ ...el, factory, element: \"water\" });\r\n\t\tfactory.addToBodies(entity.body);\r\n\t\tfactory.addToEntities(entity);\r\n\t});\r\n};\r\n\r\n/**  Земля    \r\n*!Земля с травой слева (х, y)\r\nNature.statics.ground.upper.left(blockSize * 0, height - blockSize * 4), \r\n*!Земля с травой внутри (х, y, ширина)\r\nNature.statics.ground.upper.middle(blockSize * 1, height - blockSize * 4, blockSize * 2), \r\n*!Земля с травой справа (х, y)\r\nNature.statics.ground.upper.right(blockSize * 5, height - blockSize * 7), \r\n\r\nNature.statics.ground.upper.roundLeft(blockSize * 5, height - blockSize * 7), \r\nNature.statics.ground.upper.roundRight(blockSize * 5, height - blockSize * 7), \r\n\r\n*!Земля внутри слева (х, y, высота)\r\nNature.statics.ground.vertical.left(blockSize * 0, height - blockSize * 3, blockSize * 3),\r\n*!Земля внутри (х, y, ширина, высота)\r\nNature.statics.ground.inside(blockSize, height - blockSize * 3, blockSize * 4, blockSize * 3),\r\n*!Земля внутри справа (х, y, высота)\r\nNature.statics.ground.vertical.right(blockSize * 5, height - blockSize * 6, blockSize * 6),\r\n\r\n*!Земля низ слева (х, y)\r\nNature.statics.ground.down.left(blockSize * 0, height),\r\n*!Земля низ внутри (х, y, ширина)\r\nNature.statics.ground.down.middle(blockSize * 1, height, blockSize * 4), \r\n*!Земля низ справа (х, y)\r\nNature.statics.ground.down.right(blockSize * 5, height),\r\n**/\r\n\r\n\r\n/**  Платформа\r\n *!Платформа слева (x,y)\r\nNature.statics.ground.cornice.left(blockSize * 34, height - blockSize * 6),\r\n*!Платформа внутри (x,y)\r\nNature.statics.ground.cornice.middle(blockSize * 35, height - blockSize * 6, blockSize),\r\n*!Платформа справа (x,y)\r\nNature.statics.ground.cornice.right(blockSize * 36, height - blockSize * 6),\r\n**/\r\nconst ground = [\r\n\tNature.statics.ground.upper.left(blockSize * 0, height - blockSize * 4),\r\n\tNature.statics.ground.upper.middle(blockSize * 1, height - blockSize * 4, blockSize * 6),\r\n\tNature.statics.ground.upper.middle(blockSize * 7, height - blockSize * 6, blockSize * 4),\r\n\tNature.statics.ground.upper.middle(blockSize * 11, height - blockSize * 8, blockSize * 1),\r\n\r\n\tNature.statics.ground.inside(blockSize * 0, height - blockSize * 3, blockSize * 7, blockSize * 3),\r\n\tNature.statics.ground.inside(blockSize * 7, height - blockSize * 5, blockSize * 5, blockSize * 5),\r\n\tNature.statics.ground.inside(blockSize * 11, height - blockSize * 7, blockSize * 1, blockSize * 2),\r\n\r\n\tNature.statics.ground.down.middle(blockSize * 0, height, blockSize * 12),\r\n\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 6, height - blockSize * 6),\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 10, height - blockSize * 8),\r\n\tNature.statics.ground.upper.roundRight(blockSize * 12, height - blockSize * 8),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 17, height - blockSize * 8),\r\n\tNature.statics.ground.cornice.middle(blockSize * 18, height - blockSize * 8, blockSize * 2),\r\n\tNature.statics.ground.cornice.right(blockSize * 20, height - blockSize * 8),\r\n\r\n\tNature.statics.ground.upper.once(blockSize * 16, height - blockSize * 2),\r\n\tNature.statics.ground.upper.once(blockSize * 20, height - blockSize * 2),\r\n\r\n\tNature.statics.ground.inside(blockSize * 25, height - blockSize * 3, blockSize * 2, blockSize * 3),\r\n\tNature.statics.ground.inside(blockSize * 27, height - blockSize * 5, blockSize * 2, blockSize * 5),\r\n\tNature.statics.ground.inside(blockSize * 29, height - blockSize * 4, blockSize * 3, blockSize * 4),\r\n\tNature.statics.ground.inside(blockSize * 32, height - blockSize * 3, blockSize * 10, blockSize * 3),\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 24, height - blockSize * 4),\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 26, height - blockSize * 6),\r\n\tNature.statics.ground.upper.right(blockSize * 28, height - blockSize * 6),\r\n\tNature.statics.ground.upper.right(blockSize * 31, height - blockSize * 5),\r\n\tNature.statics.ground.upper.middle(blockSize * 25, height - blockSize * 4, blockSize * 2),\r\n\tNature.statics.ground.upper.middle(blockSize * 27, height - blockSize * 6, blockSize * 1),\r\n\tNature.statics.ground.upper.middle(blockSize * 29, height - blockSize * 5, blockSize * 2),\r\n\tNature.statics.ground.upper.middle(blockSize * 32, height - blockSize * 4, blockSize * 10),\r\n\tNature.statics.ground.down.middle(blockSize * 25, height, blockSize * 17),\r\n\tNature.statics.ground.upper.roundRight(blockSize * 42, height - blockSize * 4),\r\n\r\n\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 47, height - blockSize * 3),\r\n\tNature.statics.ground.upper.left(blockSize * 52, height - blockSize * 4),\r\n\tNature.statics.ground.upper.roundRight(blockSize * 53, height - blockSize * 4),\r\n\tNature.statics.ground.upper.middle(blockSize * 48, height - blockSize * 3, blockSize * 4),\r\n\tNature.statics.ground.inside(blockSize * 48, height - blockSize * 2, blockSize * 5, blockSize * 2),\r\n\tNature.statics.ground.inside(blockSize * 52, height - blockSize * 3, blockSize * 1, blockSize * 1),\r\n\tNature.statics.ground.down.middle(blockSize * 48, height, blockSize * 5),\r\n\r\n\tNature.statics.ground.upper.once(blockSize * 58, height - blockSize * 6),\r\n\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 64, height - blockSize * 5),\r\n\tNature.statics.ground.upper.roundRight(blockSize * 72, height - blockSize * 4),\r\n\tNature.statics.ground.upper.right(blockSize * 67, height - blockSize * 5),\r\n\tNature.statics.ground.upper.middle(blockSize * 65, height - blockSize * 5, blockSize * 2),\r\n\tNature.statics.ground.upper.middle(blockSize * 68, height - blockSize * 4, blockSize * 4),\r\n\tNature.statics.ground.inside(blockSize * 65, height - blockSize * 4, blockSize * 3, blockSize * 4),\r\n\tNature.statics.ground.inside(blockSize * 68, height - blockSize * 3, blockSize * 4, blockSize * 3),\r\n\tNature.statics.ground.down.middle(blockSize * 65, height, blockSize * 7),\r\n\r\n\r\n\tNature.statics.ground.upper.roundInnerLeft(blockSize * 70, height - blockSize * 8),\r\n\tNature.statics.ground.upper.roundInnerRight(blockSize * 79, height - blockSize * 10),\r\n\tNature.statics.ground.upper.left(blockSize * 71, height - blockSize * 9),\r\n\tNature.statics.ground.upper.left(blockSize * 72, height - blockSize * 10),\r\n\tNature.statics.ground.upper.middle(blockSize * 73, height - blockSize * 10, blockSize * 6),\r\n\tNature.statics.ground.inside(blockSize * 71, height - blockSize * 8, blockSize * 1, blockSize * 1),\r\n\tNature.statics.ground.inside(blockSize * 72, height - blockSize * 9, blockSize * 1, blockSize * 1),\r\n\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 78, height - blockSize * 4),\r\n\tNature.statics.ground.upper.roundRight(blockSize * 81, height - blockSize * 4),\r\n\tNature.statics.ground.upper.middle(blockSize * 79, height - blockSize * 4, blockSize * 2),\r\n\tNature.statics.ground.inside(blockSize * 79, height - blockSize * 3, blockSize * 2, blockSize * 3),\r\n\tNature.statics.ground.down.middle(blockSize * 79, height, blockSize * 2),\r\n\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 87, height - blockSize * 4),\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 90, height - blockSize * 7),\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 93, height - blockSize * 10),\r\n\tNature.statics.ground.upper.roundRight(blockSize * 95, height - blockSize * 10),\r\n\tNature.statics.ground.upper.middle(blockSize * 88, height - blockSize * 4, blockSize * 3),\r\n\tNature.statics.ground.upper.middle(blockSize * 91, height - blockSize * 7, blockSize * 3),\r\n\tNature.statics.ground.upper.middle(blockSize * 94, height - blockSize * 10, blockSize * 1),\r\n\tNature.statics.ground.inside(blockSize * 88, height - blockSize * 3, blockSize * 7, blockSize * 3),\r\n\tNature.statics.ground.inside(blockSize * 91, height - blockSize * 6, blockSize * 4, blockSize * 3),\r\n\tNature.statics.ground.inside(blockSize * 94, height - blockSize * 9, blockSize * 1, blockSize * 3),\r\n\tNature.statics.ground.down.middle(blockSize * 88, height, blockSize * 7),\r\n\r\n\tNature.statics.ground.cornice.left(blockSize * 100, height - blockSize * 10),\r\n\tNature.statics.ground.cornice.middle(blockSize * 101, height - blockSize * 10, blockSize * 3),\r\n\tNature.statics.ground.cornice.right(blockSize * 104, height - blockSize * 10),\r\n\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 108, height - blockSize * 13),\r\n\tNature.statics.ground.upper.roundRight(blockSize * 112, height - blockSize * 13),\r\n\tNature.statics.ground.upper.middle(blockSize * 109, height - blockSize * 13, blockSize * 3),\r\n\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 119, height - blockSize * 11),\r\n\tNature.statics.ground.upper.roundRight(blockSize * 124, height - blockSize * 11),\r\n\tNature.statics.ground.upper.middle(blockSize * 120, height - blockSize * 11, blockSize * 4),\r\n\tNature.statics.ground.upper.middle(blockSize * 112, height - blockSize * 9, blockSize * 8),\r\n\tNature.statics.ground.inside(blockSize * 109, height - blockSize * 12, blockSize * 3, blockSize * 4),\r\n\tNature.statics.ground.inside(blockSize * 109, height - blockSize * 8, blockSize * 15, blockSize * 8),\r\n\tNature.statics.ground.inside(blockSize * 120, height - blockSize * 10, blockSize * 4, blockSize * 2),\r\n\tNature.statics.ground.down.middle(blockSize * 109, height, blockSize * 15),\r\n\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 130, height - blockSize * 11),\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 134, height - blockSize * 13),\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 138, height - blockSize * 15),\r\n\tNature.statics.ground.upper.roundRight(blockSize * 143, height - blockSize * 4),\r\n\tNature.statics.ground.upper.roundInnerRight(blockSize * 142, height - blockSize * 15),\r\n\tNature.statics.ground.upper.middle(blockSize * 131, height - blockSize * 11, blockSize * 4),\r\n\tNature.statics.ground.upper.middle(blockSize * 135, height - blockSize * 13, blockSize * 4),\r\n\tNature.statics.ground.upper.middle(blockSize * 139, height - blockSize * 15, blockSize * 3),\r\n\tNature.statics.ground.upper.middle(blockSize * 140, height - blockSize * 4, blockSize * 3),\r\n\tNature.statics.ground.inside(blockSize * 131, height - blockSize * 10, blockSize * 9, blockSize * 10),\r\n\tNature.statics.ground.inside(blockSize * 135, height - blockSize * 12, blockSize * 5, blockSize * 2),\r\n\tNature.statics.ground.inside(blockSize * 139, height - blockSize * 14, blockSize * 1, blockSize * 2),\r\n\tNature.statics.ground.inside(blockSize * 140, height - blockSize * 3, blockSize * 3, blockSize * 3),\r\n\tNature.statics.ground.down.middle(blockSize * 131, height, blockSize * 12),\r\n\r\n\tNature.statics.ground.upper.roundInnerLeft(blockSize * 142, height - blockSize * 11),\r\n\tNature.statics.ground.upper.roundInnerLeft(blockSize * 145, height - blockSize * 15),\r\n\tNature.statics.ground.upper.middle(blockSize * 143, height - blockSize * 11, blockSize * 6),\r\n\tNature.statics.ground.upper.middle(blockSize * 146, height - blockSize * 15, blockSize * 4),\r\n\tNature.statics.ground.inside(blockSize * 149, height - blockSize * 20, blockSize * 1, blockSize * 10),\r\n\r\n\tNature.statics.ground.upper.roundLeft(blockSize * 147, height - blockSize * 7),\r\n\tNature.statics.ground.upper.middle(blockSize * 148, height - blockSize * 7, blockSize * 17),\r\n\tNature.statics.ground.inside(blockSize * 148, height - blockSize * 6, blockSize * 17, blockSize * 6),\r\n\tNature.statics.ground.down.middle(blockSize * 148, height, blockSize * 22),\r\n\r\n\tNature.statics.ground.inside(blockSize * 164, height - blockSize * 25, blockSize * 5, blockSize * 25),\r\n\r\n\tNature.statics.ground.inside(blockSize * 0, height - blockSize * 19, blockSize * 90, blockSize * 5),\r\n\tNature.statics.ground.inside(blockSize * 87, height - blockSize * 23, blockSize * 46, blockSize * 5),\r\n\tNature.statics.ground.inside(blockSize * 133, height - blockSize * 25, blockSize * 39, blockSize * 5),\r\n\r\n];\r\n\r\nconst loadGround = factory => {\r\n\tground.forEach((el) => {\r\n\t\tconst entity = new StaticItem({ ...el, factory, element: \"ground\" });\r\n\t\tfactory.addToBodies(entity.body);\r\n\t\tfactory.addToEntities(entity);\r\n\t})\r\n};\r\n\r\nconst water = [\r\n\r\n\tNature.statics.water.up(blockSize * 0, height - blockSize * 1 - waterHeight, blockSize * 168),\r\n\tNature.statics.water.inside(blockSize * 0, height - blockSize * 1, blockSize * 168, blockSize * 6),\r\n\r\n\t// Nature.statics.water.up(blockSize * 135, height - blockSize * 2 - waterHeight, blockSize * 11),\r\n\t// Nature.statics.water.inside(blockSize * 135, height - blockSize * 2, blockSize * 11, blockSize * 3),\r\n\r\n];\r\n\r\nconst loadWater = factory => {\r\n\twater.forEach((el, idx) => {\r\n\t\tconst entity = new WaterItem({ ...el, factory, element: \"water\" });\r\n\t\tfactory.addToBodies(entity.body);\r\n\t\tfactory.addToEntities(entity);\r\n\t})\r\n};\r\n\r\nconst loadtTriggers = (factory) => {\r\n\tfactory.triggers = [\r\n\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 17 && factory.triggers[0].done === false,\r\n\t\t\taction: (factory) => factory.addBat.call(factory, blockSize * 27, height - blockSize * 10),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 3 && factory.triggers[1].done === false,\r\n\t\t\taction: (factory) => factory.addGolemBig.call(factory, blockSize * 7, height - blockSize * 7, {\r\n\t\t\t\tfrom: blockSize * 5,\r\n\t\t\t\tto: blockSize * 8\r\n\t\t\t}),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 3 && factory.triggers[2].done === false,\r\n\t\t\taction: (factory) => factory.addSpider.call(factory, blockSize * 11, height - blockSize * 14),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 9 && factory.triggers[3].done === false,\r\n\t\t\taction: (factory) => factory.addGolemBig.call(factory, blockSize * 20, height - blockSize * 9, {\r\n\t\t\t\tfrom: blockSize * 17,\r\n\t\t\t\tto: blockSize * 20\r\n\t\t\t}),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 15 && factory.triggers[4].done === false,\r\n\t\t\taction: (factory) => factory.addSpider.call(factory, blockSize * 20, height - blockSize * 7),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 30 && factory.triggers[5].done === false,\r\n\t\t\taction: (factory) => factory.addGolemBig.call(factory, blockSize * 41, height - blockSize * 5, {\r\n\t\t\t\tfrom: blockSize * 32,\r\n\t\t\t\tto: blockSize * 41\r\n\t\t\t}),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 35 && factory.triggers[6].done === false,\r\n\t\t\taction: (factory) => factory.addSpider.call(factory, blockSize * 44, height - blockSize * 14),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 40 && factory.triggers[7].done === false,\r\n\t\t\taction: (factory) => factory.addGolemBig.call(factory, blockSize * 50, height - blockSize * 4, {\r\n\t\t\t\tfrom: blockSize * 46,\r\n\t\t\t\tto: blockSize * 50\r\n\t\t\t}),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 51 && factory.triggers[8].done === false,\r\n\t\t\taction: (factory) => factory.addSpider.call(factory, blockSize * 55, height - blockSize * 14),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 50 && factory.triggers[9].done === false,\r\n\t\t\taction: (factory) => factory.addSpider.call(factory, blockSize * 60, height - blockSize * 14),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 60 && factory.triggers[10].done === false,\r\n\t\t\taction: (factory) => factory.addBat.call(factory, blockSize * 69, height - blockSize * 10),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 67 && factory.triggers[11].done === false,\r\n\t\t\taction: (factory) => factory.addGolemBig.call(factory, blockSize * 78, height - blockSize * 11, {\r\n\t\t\t\tfrom: blockSize * 72,\r\n\t\t\t\tto: blockSize * 78\r\n\t\t\t}),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 64 && factory.triggers[12].done === false,\r\n\t\t\taction: (factory) => factory.addGolemBig.call(factory, blockSize * 71, height - blockSize * 5, {\r\n\t\t\t\tfrom: blockSize * 68,\r\n\t\t\t\tto: blockSize * 71\r\n\t\t\t}),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 70 && factory.triggers[13].done === false,\r\n\t\t\taction: (factory) => factory.addSpider.call(factory, blockSize * 75, height - blockSize * 8),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 71 && factory.triggers[14].done === false,\r\n\t\t\taction: (factory) => factory.addBat.call(factory, blockSize * 85, height - blockSize * 12),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 85 && factory.triggers[15].done === false,\r\n\t\t\taction: (factory) => factory.addGolemBig.call(factory, blockSize * 92, height - blockSize * 8, {\r\n\t\t\t\tfrom: blockSize * 89,\r\n\t\t\t\tto: blockSize * 92\r\n\t\t\t}),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 88 && factory.triggers[16].done === false,\r\n\t\t\taction: (factory) => factory.addGolemBig.call(factory, blockSize * 92, height - blockSize * 8, {\r\n\t\t\t\tfrom: blockSize * 92,\r\n\t\t\t\tto: blockSize * 94\r\n\t\t\t}),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 93 && factory.triggers[17].done === false,\r\n\t\t\taction: (factory) => factory.addSpider.call(factory, blockSize * 97, height - blockSize * 17),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 108 && factory.triggers[18].done === false,\r\n\t\t\taction: (factory) => factory.addBat.call(factory, blockSize * 115, height - blockSize * 15),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 110 && factory.triggers[19].done === false,\r\n\t\t\taction: (factory) => factory.addGolemBig.call(factory, blockSize * 117, height - blockSize * 10, {\r\n\t\t\t\tfrom: blockSize * 112,\r\n\t\t\t\tto: blockSize * 117\r\n\t\t\t}),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 122 && factory.triggers[20].done === false,\r\n\t\t\taction: (factory) => factory.addBat.call(factory, blockSize * 131, height - blockSize * 15),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 128 && factory.triggers[21].done === false,\r\n\t\t\taction: (factory) => factory.addSpider.call(factory, blockSize * 132, height - blockSize * 17),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 137 && factory.triggers[22].done === false,\r\n\t\t\taction: (factory) => factory.addSpider.call(factory, blockSize * 143, height - blockSize * 19),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcondition: factory => factory.entities.player.body.position.x >= blockSize * 142 && factory.triggers[23].done === false,\r\n\t\t\taction: (factory) => factory.addSpider.call(factory, blockSize * 143, height - blockSize * 9),\r\n\t\t\tdone: false,\r\n\t\t},\r\n\t\t// {\r\n\t\t// \tcondition: factory => factory.entities.player.body.position.x >= 11300 && factory.triggers[24].done === false,\r\n\t\t// \taction: (factory) => {\r\n\t\t// \t\tfactory.addBoss1.call(factory, 12000, height - blockSize * 7);\r\n\t\t// \t\tfactory.fixCamera.call(factory, 11125, height - blockSize * 15);\r\n\t\t// \t},\r\n\t\t// \tdone: false,\r\n\t\t// },\r\n\t]\r\n};\r\n\r\nconst setup = factory => {\r\n\tloadGround(factory);\r\n\tloadWater(factory);\r\n\tloadBackgrounds(factory);\r\n\tloadtTriggers(factory);\r\n\treturn {\r\n\t\tlevelWidth, levelHeight, playerStart: {\r\n\t\t\tx: 200,\r\n\t\t\ty: height - blockSize * 5\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default {\r\n\tsetup: (factory) => setup(factory)\r\n};","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\2lvl\\farm\\farm.js",["442"],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\factory\\2lvl\\nature\\nature.js",["443"],"import cornice from './assets/cornice.png'\r\nimport corniceCorner from './assets/corniceCorner.png';\r\nimport down from './assets/down.png';\r\nimport downCorner from './assets/down.png';\r\nimport middle from './assets/middle.png';\r\nimport corner from './assets/up.png';\r\nimport up from './assets/up.png';\r\nimport upCorner from './assets/upCorner.png';\r\nimport vertical from './assets/middle.png';\r\nimport water from './assets/water.png';\r\nimport waterUp from './assets/waterUp.png';\r\nimport asset from './nature.png';\r\nimport cornerInside from './assets/middle.png';\r\nimport upRoundCorner from './assets/upRoundCorner.png';\r\nimport upperOnce from './assets/upperOnce.png';\r\nimport upRoundInnerCorner from './assets/upRoundInnerCorner.png';\r\n\r\nconst defaultPerspective = 10;\r\nconst size = 74;\r\nconst corniceHeight = 46;\r\nconst waterHeight = 46;\r\n\r\nconst getAsset = asset => `url(${asset})`;\r\n\r\nconst mirror = \"180deg\";\r\n\r\n/* Углы */\r\n\r\nconst bgs = {\r\n  plate: { width: 36, height: 38, bgx: -514, bgy: -39 },\r\n  pointer: { width: 36, height: 38, bgx: -567, bgy: -39 },\r\n  mashroomOrange: { width: 29, height: 23, bgx: -649, bgy: -53 },\r\n  mashroomPink: { width: 29, height: 23, bgx: -616, bgy: -53 },\r\n  stump: { width: 76, height: 25, bgx: -696, bgy: -68 },\r\n  trees: {\r\n    big: { width: 167, height: 182, bgx: -448, bgy: -91 },\r\n    small: { width: 167, height: 165, bgx: -620, bgy: -107 }\r\n  },\r\n  bush: {\r\n    big: {\r\n      green: { width: 82, height: 38, bgx: -479, bgy: -301 },\r\n      yellow: { width: 82, height: 38, bgx: -566, bgy: -301 }\r\n    },\r\n    small: {\r\n      green: { width: 42, height: 38, bgx: -672, bgy: -307 },\r\n      yellow: { width: 42, height: 38, bgx: -726, bgy: -301 }\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst getItem = (left, top, props, perspective, middle) => {\r\n\r\n  return ({\r\n    ...props,\r\n    left: left,\r\n    top: top,\r\n    asset,\r\n    perspective: perspective || defaultPerspective\r\n  })\r\n};\r\n\r\nexport default {\r\n  blockSize: size,\r\n  waterHeight,\r\n  corniceHeight,\r\n  statics: {\r\n\r\n    ground: {\r\n\r\n      inside: (left, top, width, height) => ({\r\n        left, top,\r\n        width, height,\r\n        asset: getAsset(middle)\r\n      }),\r\n\r\n      corner:\r\n      {\r\n        right: (left, top) => ({\r\n          left, top, width: size, height: size,\r\n          asset: getAsset(cornerInside),\r\n          rotateY: mirror\r\n        }),\r\n        left: (left, top) => ({\r\n          left, top, width: size, height: size,\r\n          asset: getAsset(cornerInside),\r\n        })\r\n      },\r\n\r\n      upper: {\r\n\r\n        left: (left, top) => ({\r\n          left, top,\r\n          width: size,\r\n          height: size,\r\n          asset: getAsset(upCorner),\r\n          bgy: 1,\r\n        }),\r\n\r\n        middle: (left, top, width) => ({\r\n          left, top,\r\n          width, height: size,\r\n          asset: getAsset(up),\r\n          bgy: 1,\r\n        }),\r\n        once: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(upperOnce),\r\n          bgy: 1,\r\n        }),\r\n\r\n        right: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(upCorner),\r\n          rotateY: mirror,\r\n          bgy: 1,\r\n        }),\r\n        leftCorner: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(corner),\r\n        }),\r\n\r\n        rightCorner: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(corner),\r\n          rotateY: mirror\r\n        }),\r\n        roundLeft: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(upRoundCorner),\r\n        }),\r\n        roundRight: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(upRoundCorner),\r\n          rotateY: mirror\r\n        }),\r\n        roundInnerLeft: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(upRoundInnerCorner),\r\n        }),\r\n        roundInnerRight: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(upRoundInnerCorner),\r\n          rotateY: mirror\r\n        }),\r\n      },\r\n\r\n      vertical: {\r\n\r\n        left: (left, top, height) => ({\r\n          left, top,\r\n          width: size, height,\r\n          asset: getAsset(vertical),\r\n        }),\r\n\r\n        right: (left, top, height) => ({\r\n          left, top,\r\n          width: size, height,\r\n          asset: getAsset(vertical),\r\n          rotateY: mirror\r\n        }),\r\n\r\n      },\r\n\r\n      down: {\r\n\r\n        left: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(downCorner)\r\n        }),\r\n\r\n        middle: (left, top, width) => ({\r\n          left, top,\r\n          width, height: size,\r\n          asset: getAsset(down)\r\n        }),\r\n\r\n        right: (left, top) => ({\r\n          left, top,\r\n          width: size, height: size,\r\n          asset: getAsset(downCorner),\r\n          rotateY: mirror\r\n        }),\r\n\r\n      },\r\n\r\n      cornice: {\r\n        left: (left, top) => ({\r\n          left, top,\r\n          width: size, height: corniceHeight,\r\n          asset: getAsset(corniceCorner)\r\n        }),\r\n\r\n        middle: (left, top, width) => ({\r\n          left, top,\r\n          width, height: corniceHeight,\r\n          asset: getAsset(cornice),\r\n        }),\r\n\r\n        right: (left, top) => ({\r\n          left, top,\r\n          width: size, height: corniceHeight,\r\n          asset: getAsset(corniceCorner),\r\n          rotateY: mirror\r\n        }),\r\n\r\n      },\r\n\r\n    },\r\n\r\n    water: {\r\n\r\n      up: (left, top, w) => ({\r\n        left, top,\r\n        width: w, height: waterHeight,\r\n        asset: getAsset(waterUp),\r\n      }),\r\n\r\n      inside: (left, top, width, height) => ({\r\n        left, top,\r\n        width: width, height: height,\r\n        asset: getAsset(water),\r\n      }),\r\n\r\n    },\r\n  },\r\n\r\n  backgrounds: {\r\n    plate: (left, top, perspective) => getItem(left, top, bgs.plate, perspective),\r\n    pointer: (left, top, perspective) => getItem(left, top, bgs.pointer, perspective),\r\n    mashrooms: {\r\n      orange: (left, top, perspective) => getItem(left, top, bgs.mashroomOrange, perspective),\r\n      pink: (left, top, perspective) => getItem(left, top, bgs.mashroomPink, perspective),\r\n    },\r\n    stump: (left, top, perspective) => getItem(left, top, bgs.stump, perspective),\r\n    trees: {\r\n      big: (left, top, perspective) => getItem(left, top, bgs.trees.big, perspective),\r\n      small: (left, top, perspective) => getItem(left, top, bgs.trees.small, perspective),\r\n    },\r\n    bush: {\r\n      big: {\r\n        green: (left, top, perspective) => getItem(left, top, bgs.bush.big.green, perspective),\r\n        yellow: (left, top, perspective) => getItem(left, top, bgs.bush.big.yellow, perspective),\r\n      },\r\n      small: {\r\n        green: (left, top, perspective) => getItem(left, top, bgs.bush.small.green, perspective),\r\n        yellow: (left, top, perspective) => getItem(left, top, bgs.bush.small.yellow, perspective),\r\n      }\r\n    }\r\n  }\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\reportWebVitals.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Boss1\\Boss1.bullet.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\lib\\getRandomFromArray.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\GolemBig\\GolemBig.js",["444","445","446"],"import Enemy from '../Enemy';\r\nimport animations from './GolemBig.animations';\r\nimport background from './GolemBig.png';\r\nimport Matter from 'matter-js';\r\nimport Bullet from './GolemBig.bullet';\r\nimport distanceProps from '../../../../lib/distanceProps';\r\nimport categories from '../../../../constraints/colides';\r\n\r\nconst settings = {\r\n  speed: 3,\r\n  reload: 1500,\r\n  damage: 15\r\n};\r\n\r\nconst asset = `url(${background})`;\r\n\r\nexport default class GolemBig extends Enemy {\r\n  constructor({\r\n    left, top, factory, angle, scenario }) {\r\n    super({\r\n      left, top,\r\n      factory, world: factory.game.entities.world,\r\n      width: 90, height: 85,\r\n      defaultAnimation: animations.move,\r\n      animations,\r\n      angle,\r\n      health: 200,\r\n      speed: settings.speed,\r\n      matterProps: {\r\n        density: Infinity,\r\n        mass: 200,\r\n        collisionFilter: {\r\n          category: categories.enemy,\r\n          mask: categories.static | categories.player | categories.bullet,\r\n          group: categories.enemy,\r\n        }\r\n      },\r\n      asset,\r\n    });\r\n    this.unit = \"golemBig\";\r\n    this.scenario = scenario;\r\n  }\r\n\r\n  fire = () => {\r\n    const { x, y } = this.getPosition();\r\n    const { damage, speed, reload } = settings;\r\n    this.reload = true;\r\n\r\n    setTimeout(() => {\r\n      this.reload = false\r\n    }, reload);\r\n\r\n    const bullet = new Bullet({ x, y, speed, damage, angle: 45, factory: this });\r\n    this.factory.addEntity(bullet);\r\n  }\r\n\r\n  shoot = () => {\r\n    if (!this.reload) {\r\n      this.changeAnimation(animations.cast, this.fire.bind(this))\r\n    };\r\n  };\r\n\r\n  AI = (entities) => {\r\n\r\n    const { player } = entities;\r\n\r\n    const playerPosition = player.getPosition();\r\n    const golemPosition = this.getPosition();\r\n\r\n    const { distance, angle } = distanceProps(playerPosition, golemPosition);\r\n\r\n    if (distance < 400) {\r\n\r\n      this.angle = playerPosition.x < golemPosition.x ? -180 : 0;\r\n      this.shoot();\r\n    } else {\r\n\r\n      if (this.scenario) {\r\n\r\n        const { from, to } = this.scenario;\r\n\r\n        const { x, y } = this.getCoordinates();\r\n\r\n        if (this.angle < 0) {\r\n\r\n          if (x - this.speed < from) {\r\n            this.angle = 0;\r\n          } else {\r\n            this.moveLeft()\r\n          }\r\n        } else {\r\n\r\n          if (x + this.speed > to) {\r\n            this.angle = -180;\r\n          } else {\r\n            this.moveRight()\r\n          }\r\n        };\r\n      } else {\r\n        this.moveLeft()\r\n      }\r\n\r\n\r\n    };\r\n\r\n    this.animate();\r\n  };\r\n\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Bat\\Bat.js",["447"],"import Enemy from '../Enemy';\r\nimport animations from './Bat.animations';\r\nimport background from './bat.png';\r\n\r\nconst asset = `url(${background})`;\r\n\r\nexport default class Bat extends Enemy {\r\n  constructor({\r\n    left, top, factory, angle, scenario,\r\n  }) {\r\n    super({\r\n      left, top,\r\n      factory, world: factory.game.entities.world,\r\n      width: 60, height: 65,\r\n      defaultAnimation: animations.idle,\r\n      animations,\r\n      angle,\r\n      health: 200,\r\n      speed: 3,\r\n      matterProps: { density: Infinity, mass: 200, isStatic: true },\r\n      asset,\r\n      scale: 0.8\r\n    });\r\n    this.unit = \"bat\";\r\n    this.weapon = null;\r\n    this.scenario = scenario;\r\n  };\r\n\r\n  AI = (entities) => {\r\n    if (!this.scenario) {\r\n      this.moveLeft();\r\n      this.animate();\r\n    } else {\r\n      const { x, _ } = this.getCoordinates();\r\n      const { from, to } = this.scenario;\r\n\r\n      if (x - this.speed < from) {\r\n        this.angle = 0;\r\n        this.moveLeft();\r\n      };\r\n\r\n      if (x + this.speed > to) {\r\n        this.angle = -180;\r\n        this.moveRight()\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Spider\\Spider.js",["448"],"import Enemy from '../Enemy';\r\nimport animations from './Spider.animations';\r\nimport background from './Spider.png';\r\n\r\nconst asset = `url(${background})`;\r\n\r\nexport default class Spider extends Enemy {\r\n  constructor({\r\n    left, top, factory, angle, scenario,\r\n  }) {\r\n    super({\r\n      left, top,\r\n      factory, world: factory.game.entities.world,\r\n      width: 60, height: 65,\r\n      defaultAnimation: animations.idle,\r\n      animations,\r\n      angle,\r\n      health: 200,\r\n      speed: 3,\r\n      matterProps: { density: Infinity, mass: 200, isStatic: true },\r\n      asset,\r\n      scale: 0.8\r\n    });\r\n    this.unit = \"spider\";\r\n    this.weapon = null;\r\n    this.scenario = scenario;\r\n  };\r\n\r\n  AI = (entities) => {\r\n    if (!this.scenario) {\r\n      //this.moveLeft();\r\n      this.moveDown();\r\n      this.animate();\r\n    } else {\r\n      const { y, _ } = this.getCoordinates();\r\n      const { from, to } = this.scenario;\r\n\r\n      if (y - this.speed < from) {\r\n        this.angle = 0;\r\n        this.moveDown();\r\n      };\r\n\r\n      if (y + this.speed > to) {\r\n        this.angle = -180;\r\n        this.moveRight()\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Spider\\Spider.animations.js",["449"],"import png from './Spider.png';\r\n\r\nconst asset = `url(${png})`;\r\n\r\nconst idle = [{\r\n  slides: [\r\n    { x: 0, y: 0, w: 130, h: 75, duration: 6 },\r\n    { x: -130, y: 0, w: 130, h: 75, duration: 6 },\r\n    { x: -260, y: 0, w: 130, h: 75, duration: 6 },\r\n    { x: -390, y: 0, w: 130, h: 75, duration: 6 },\r\n    { x: 0, y: -75, w: 130, h: 75, duration: 6 },\r\n    { x: -130, y: -75, w: 130, h: 75, duration: 6 },\r\n    { x: -260, y: -75, w: 130, h: 75, duration: 6 },\r\n    { x: -390, y: -75, w: 130, h: 75, duration: 6 },\r\n    { x: 0, y: -150, w: 130, h: 75, duration: 6 },\r\n    { x: -130, y: -150, w: 130, h: 75, duration: 6 },\r\n    { x: -260, y: -150, w: 130, h: 75, duration: 6 },\r\n    { x: -390, y: -150, w: 130, h: 75, duration: 6 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}]\r\n\r\nconst move = [{\r\n  slides: [\r\n    { x: -7, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -49, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -94, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -139, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -184, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -229, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -274, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -319, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -364, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -409, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -464, y: -52, w: 45, h: 45, duration: 6 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}];\r\n\r\nconst jump = {\r\n  slides: [\r\n    { x: -53, y: -117, w: 50, h: 50, duration: 4 },\r\n    { x: -100, y: -117, w: 45, h: 51, duration: 5 },\r\n    { x: -141, y: -117, w: 45, h: 51, duration: 6 },\r\n    { x: -182, y: -117, w: 42, h: 51, duration: 5 },\r\n    { x: -222, y: -115, w: 42, h: 57, duration: 5 },\r\n    { x: -264, y: -110, w: 41, h: 78, duration: 5 },\r\n    { x: -303, y: -100, w: 41, h: 78, duration: 4 },\r\n  ],\r\n  isCycle: false,\r\n  asset\r\n};\r\n\r\nconst fall = {\r\n  slides: [\r\n    { x: -264, y: -100, w: 41, h: 78, duration: 5 },\r\n    { x: -303, y: -100, w: 41, h: 78, duration: 5 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n};\r\n\r\nconst jumpAnimation = [\r\n  jump, fall\r\n]\r\n\r\nconst runAndFire = [\r\n  { x: -1, y: -232, duration: 6 },\r\n  { x: -54, y: -232, duration: 6 },\r\n  { x: -107, y: -232, duration: 6 },\r\n  { x: -159, y: -232, duration: 6 },\r\n  { x: -212, y: -232, duration: 6 },\r\n  { x: -265, y: -232, duration: 6 },\r\n  { x: -319, y: -232, duration: 6 },\r\n  { x: -370, y: -232, duration: 6 },\r\n  { x: -418, y: -232, duration: 6 },\r\n  { x: -467, y: -232, duration: 6 },\r\n]\r\n\r\nconst idleFire = [{\r\n  slides: [\r\n    { x: -36, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -78, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -128, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -169, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -220, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -266, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -316, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -375, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -433, y: -410, w: 45, h: 45, duration: 4 },\r\n  ],\r\n  isCycle: false,\r\n  asset\r\n}];\r\n\r\n\r\nconst animations = {\r\n  idle, move: idle, jump, fall, jumpAnimation, runAndFire, idleFire\r\n};\r\n\r\nexport default animations;\r\n\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\Bat\\Bat.animations.js",["450"],"import png from './bat.png';\r\n\r\nconst asset = `url(${png})`;\r\n\r\nconst idle = [{\r\n  slides: [\r\n    { x: -10, y: -8, w: 122, h: 136, duration: 6 },\r\n    { x: -134, y: -8, w: 122, h: 136, duration: 6 },\r\n    { x: -258, y: -8, w: 122, h: 136, duration: 6 },\r\n    { x: -416, y: -8, w: 122, h: 136, duration: 6 },\r\n    { x: -544, y: -8, w: 122, h: 136, duration: 6 },\r\n    { x: -675, y: -8, w: 122, h: 136, duration: 6 },\r\n    { x: -807, y: -8, w: 122, h: 136, duration: 6 },\r\n    { x: -941, y: -8, w: 122, h: 136, duration: 6 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}]\r\n\r\nconst move = [{\r\n  slides: [\r\n    { x: -7, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -49, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -94, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -139, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -184, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -229, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -274, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -319, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -364, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -409, y: -52, w: 45, h: 45, duration: 6 },\r\n    { x: -464, y: -52, w: 45, h: 45, duration: 6 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}];\r\n\r\nconst jump = {\r\n  slides: [\r\n    { x: -53, y: -117, w: 50, h: 50, duration: 4 },\r\n    { x: -100, y: -117, w: 45, h: 51, duration: 5 },\r\n    { x: -141, y: -117, w: 45, h: 51, duration: 6 },\r\n    { x: -182, y: -117, w: 42, h: 51, duration: 5 },\r\n    { x: -222, y: -115, w: 42, h: 57, duration: 5 },\r\n    { x: -264, y: -110, w: 41, h: 78, duration: 5 },\r\n    { x: -303, y: -100, w: 41, h: 78, duration: 4 },\r\n  ],\r\n  isCycle: false,\r\n  asset\r\n};\r\n\r\nconst fall = {\r\n  slides: [\r\n    { x: -264, y: -100, w: 41, h: 78, duration: 5 },\r\n    { x: -303, y: -100, w: 41, h: 78, duration: 5 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n};\r\n\r\nconst jumpAnimation = [\r\n  jump, fall\r\n]\r\n\r\nconst runAndFire = [\r\n  { x: -1, y: -232, duration: 6 },\r\n  { x: -54, y: -232, duration: 6 },\r\n  { x: -107, y: -232, duration: 6 },\r\n  { x: -159, y: -232, duration: 6 },\r\n  { x: -212, y: -232, duration: 6 },\r\n  { x: -265, y: -232, duration: 6 },\r\n  { x: -319, y: -232, duration: 6 },\r\n  { x: -370, y: -232, duration: 6 },\r\n  { x: -418, y: -232, duration: 6 },\r\n  { x: -467, y: -232, duration: 6 },\r\n]\r\n\r\nconst idleFire = [{\r\n  slides: [\r\n    { x: -36, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -78, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -128, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -169, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -220, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -266, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -316, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -375, y: -410, w: 45, h: 45, duration: 4 },\r\n    { x: -433, y: -410, w: 45, h: 45, duration: 4 },\r\n  ],\r\n  isCycle: false,\r\n  asset\r\n}];\r\n\r\n\r\nconst animations = {\r\n  idle, move: idle, jump, fall, jumpAnimation, runAndFire, idleFire\r\n};\r\n\r\nexport default animations;\r\n\r\n","C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\GolemBig\\GolemBig.bullet.js",[],"C:\\Users\\Евгений\\Documents\\GitHub\\contra\\src\\game\\entities\\Units\\Enemies\\GolemBig\\GolemBig.animations.js",["451"],"import png from './GolemBig.png';\r\n\r\nconst asset = `url(${png})`;\r\n\r\nconst idle = [{\r\n  slides: [\r\n    { x: 0, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -150, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -300, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -450, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -600, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -750, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -900, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -1050, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -1200, y: -135, w: 150, h: 95, duration: 6 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}]\r\n\r\nconst move = [{\r\n  slides: [\r\n    { x: 0, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -150, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -300, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -450, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -600, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -750, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -900, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -1050, y: -135, w: 150, h: 95, duration: 6 },\r\n    { x: -1200, y: -135, w: 150, h: 95, duration: 6 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}];\r\n\r\nconst jump = {\r\n  slides: [\r\n    { x: 0, y: -236, w: 170, h: 142, duration: 8 },\r\n    { x: -300, y: -236, w: 150, h: 142, duration: 7 },\r\n    { x: -450, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -600, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -750, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -900, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -1050, y: -236, w: 150, h: 142, duration: 7 },\r\n    { x: -1200, y: -236, w: 150, h: 142, duration: 8 },\r\n  ],\r\n  isCycle: false,\r\n  asset\r\n};\r\n\r\nconst fall = {\r\n  slides: [\r\n    { x: 0, y: -236, w: 170, h: 142, duration: 8 },\r\n    { x: -300, y: -236, w: 150, h: 142, duration: 7 },\r\n    { x: -450, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -600, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -750, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -900, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -1050, y: -236, w: 150, h: 142, duration: 7 },\r\n    { x: -1200, y: -236, w: 150, h: 142, duration: 8 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n};\r\n\r\nconst jumpAnimattion = [\r\n  jump, fall\r\n]\r\n\r\nconst cast = [{\r\n  slides: [\r\n    { x: 0, y: -236, w: 170, h: 142, duration: 8 },\r\n    { x: -300, y: -236, w: 150, h: 142, duration: 7 },\r\n    { x: -450, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -600, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -750, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -900, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -1050, y: -236, w: 150, h: 142, duration: 7 },\r\n    { x: -1200, y: -236, w: 150, h: 142, duration: 8 },\r\n  ],\r\n  isCycle: false,\r\n  asset\r\n}];\r\n\r\n\r\n\r\nconst idleFire = [{\r\n  slides: [\r\n    { x: 0, y: -236, w: 170, h: 142, duration: 8 },\r\n    { x: -300, y: -236, w: 150, h: 142, duration: 7 },\r\n    { x: -450, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -600, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -750, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -900, y: -236, w: 150, h: 142, duration: 6 },\r\n    { x: -1050, y: -236, w: 150, h: 142, duration: 7 },\r\n    { x: -1200, y: -236, w: 150, h: 142, duration: 8 },\r\n  ],\r\n  isCycle: true,\r\n  asset\r\n}];\r\n\r\nexport default {\r\n  idle, move: move, jump, fall, jumpAnimattion, cast, idleFire\r\n};\r\n\r\n\r\n",{"ruleId":"452","replacedBy":"453"},{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","severity":1,"message":"457","line":10,"column":26,"nodeType":"458","messageId":"459","endLine":10,"endColumn":31},{"ruleId":"456","severity":1,"message":"460","line":1,"column":8,"nodeType":"458","messageId":"459","endLine":1,"endColumn":14},{"ruleId":"456","severity":1,"message":"461","line":7,"column":9,"nodeType":"458","messageId":"459","endLine":7,"endColumn":15},{"ruleId":"456","severity":1,"message":"462","line":2,"column":8,"nodeType":"458","messageId":"459","endLine":2,"endColumn":23},{"ruleId":"456","severity":1,"message":"463","line":1,"column":10,"nodeType":"458","messageId":"459","endLine":1,"endColumn":33},{"ruleId":"456","severity":1,"message":"460","line":1,"column":8,"nodeType":"458","messageId":"459","endLine":1,"endColumn":14},{"ruleId":"456","severity":1,"message":"460","line":1,"column":8,"nodeType":"458","messageId":"459","endLine":1,"endColumn":14},{"ruleId":"456","severity":1,"message":"464","line":31,"column":13,"nodeType":"458","messageId":"459","endLine":31,"endColumn":26},{"ruleId":"456","severity":1,"message":"465","line":5,"column":8,"nodeType":"458","messageId":"459","endLine":5,"endColumn":14},{"ruleId":"456","severity":1,"message":"466","line":10,"column":7,"nodeType":"458","messageId":"459","endLine":10,"endColumn":20},{"ruleId":"456","severity":1,"message":"467","line":14,"column":7,"nodeType":"458","messageId":"459","endLine":14,"endColumn":12},{"ruleId":"468","severity":1,"message":"469","line":495,"column":1,"nodeType":"470","endLine":497,"endColumn":3},{"ruleId":"468","severity":1,"message":"469","line":60,"column":1,"nodeType":"470","endLine":230,"endColumn":2},{"ruleId":"456","severity":1,"message":"471","line":1,"column":10,"nodeType":"458","messageId":"459","endLine":1,"endColumn":13},{"ruleId":"456","severity":1,"message":"460","line":2,"column":8,"nodeType":"458","messageId":"459","endLine":2,"endColumn":14},{"ruleId":"468","severity":1,"message":"469","line":39,"column":1,"nodeType":"470","endLine":61,"endColumn":2},{"ruleId":"456","severity":1,"message":"460","line":1,"column":8,"nodeType":"458","messageId":"459","endLine":1,"endColumn":14},{"ruleId":"456","severity":1,"message":"472","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":14},{"ruleId":"456","severity":1,"message":"473","line":2,"column":16,"nodeType":"458","messageId":"459","endLine":2,"endColumn":22},{"ruleId":"474","severity":1,"message":"475","line":5,"column":3,"nodeType":"476","messageId":"477","endLine":7,"endColumn":4},{"ruleId":"468","severity":1,"message":"469","line":4,"column":1,"nodeType":"470","endLine":7,"endColumn":2},{"ruleId":"474","severity":1,"message":"475","line":5,"column":3,"nodeType":"476","messageId":"477","endLine":7,"endColumn":4},{"ruleId":"474","severity":1,"message":"475","line":6,"column":3,"nodeType":"476","messageId":"477","endLine":8,"endColumn":4},{"ruleId":"478","severity":1,"message":"479","line":7,"column":30,"nodeType":"480","messageId":"481","endLine":7,"endColumn":31,"fix":"482"},{"ruleId":"478","severity":1,"message":"479","line":8,"column":30,"nodeType":"480","messageId":"481","endLine":8,"endColumn":31,"fix":"483"},{"ruleId":"478","severity":1,"message":"479","line":7,"column":30,"nodeType":"480","messageId":"481","endLine":7,"endColumn":31,"fix":"484"},{"ruleId":"452","replacedBy":"485"},{"ruleId":"454","replacedBy":"486"},{"ruleId":"456","severity":1,"message":"487","line":3,"column":5,"nodeType":"458","messageId":"459","endLine":3,"endColumn":9},{"ruleId":"456","severity":1,"message":"460","line":4,"column":8,"nodeType":"458","messageId":"459","endLine":4,"endColumn":14},{"ruleId":"456","severity":1,"message":"488","line":6,"column":8,"nodeType":"458","messageId":"459","endLine":6,"endColumn":12},{"ruleId":"456","severity":1,"message":"460","line":2,"column":8,"nodeType":"458","messageId":"459","endLine":2,"endColumn":14},{"ruleId":"456","severity":1,"message":"460","line":1,"column":8,"nodeType":"458","messageId":"459","endLine":1,"endColumn":14},{"ruleId":"456","severity":1,"message":"489","line":23,"column":7,"nodeType":"458","messageId":"459","endLine":23,"endColumn":11},{"ruleId":"468","severity":1,"message":"469","line":92,"column":1,"nodeType":"470","endLine":94,"endColumn":3},{"ruleId":"456","severity":1,"message":"489","line":26,"column":7,"nodeType":"458","messageId":"459","endLine":26,"endColumn":11},{"ruleId":"456","severity":1,"message":"489","line":26,"column":7,"nodeType":"458","messageId":"459","endLine":26,"endColumn":11},{"ruleId":"456","severity":1,"message":"490","line":5,"column":5,"nodeType":"458","messageId":"459","endLine":5,"endColumn":10},{"ruleId":"452","replacedBy":"491"},{"ruleId":"454","replacedBy":"492"},{"ruleId":"493","severity":1,"message":"494","line":6,"column":3,"nodeType":"495","messageId":"496","endLine":28,"endColumn":4},{"ruleId":"456","severity":1,"message":"497","line":33,"column":9,"nodeType":"458","messageId":"459","endLine":33,"endColumn":12},{"ruleId":"456","severity":1,"message":"498","line":4,"column":7,"nodeType":"458","messageId":"459","endLine":4,"endColumn":13},{"ruleId":"456","severity":1,"message":"487","line":3,"column":5,"nodeType":"458","messageId":"459","endLine":3,"endColumn":9},{"ruleId":"456","severity":1,"message":"465","line":5,"column":8,"nodeType":"458","messageId":"459","endLine":5,"endColumn":14},{"ruleId":"456","severity":1,"message":"466","line":10,"column":7,"nodeType":"458","messageId":"459","endLine":10,"endColumn":20},{"ruleId":"456","severity":1,"message":"467","line":14,"column":7,"nodeType":"458","messageId":"459","endLine":14,"endColumn":12},{"ruleId":"468","severity":1,"message":"469","line":401,"column":1,"nodeType":"470","endLine":403,"endColumn":3},{"ruleId":"468","severity":1,"message":"469","line":39,"column":1,"nodeType":"470","endLine":61,"endColumn":2},{"ruleId":"468","severity":1,"message":"469","line":63,"column":1,"nodeType":"470","endLine":260,"endColumn":2},{"ruleId":"456","severity":1,"message":"460","line":4,"column":8,"nodeType":"458","messageId":"459","endLine":4,"endColumn":14},{"ruleId":"456","severity":1,"message":"499","line":70,"column":23,"nodeType":"458","messageId":"459","endLine":70,"endColumn":28},{"ruleId":"456","severity":1,"message":"500","line":82,"column":20,"nodeType":"458","messageId":"459","endLine":82,"endColumn":21},{"ruleId":"456","severity":1,"message":"501","line":34,"column":18,"nodeType":"458","messageId":"459","endLine":34,"endColumn":19},{"ruleId":"456","severity":1,"message":"501","line":35,"column":18,"nodeType":"458","messageId":"459","endLine":35,"endColumn":19},{"ruleId":"456","severity":1,"message":"489","line":24,"column":7,"nodeType":"458","messageId":"459","endLine":24,"endColumn":11},{"ruleId":"456","severity":1,"message":"489","line":20,"column":7,"nodeType":"458","messageId":"459","endLine":20,"endColumn":11},{"ruleId":"468","severity":1,"message":"469","line":103,"column":1,"nodeType":"470","endLine":105,"endColumn":3},"no-native-reassign",["502"],"no-negated-in-lhs",["503"],"no-unused-vars","'click' is defined but never used.","Identifier","unusedVar","'Matter' is defined but never used.","'player' is assigned a value but never used.","'getFromEntities' is defined but never used.","'RGB_PVRTC_2BPPV1_Format' is defined but never used.","'isWaterColide' is assigned a value but never used.","'Player' is defined but never used.","'corniceHeight' is assigned a value but never used.","'floor' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'zip' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"504","text":"505"},{"range":"506","text":"507"},{"range":"508","text":"507"},["502"],["503"],"'once' is assigned a value but never used.","'Bang' is defined but never used.","'move' is assigned a value but never used.","'twice' is assigned a value but never used.",["502"],["503"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'rad' is assigned a value but never used.","'frames' is assigned a value but never used.","'angle' is assigned a value but never used.","'y' is assigned a value but never used.","'_' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[191,198],"\r\n    .",[248,267],"\r\n                .",[184,203]]